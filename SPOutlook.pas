(* SPOutlook - Outlook import unit for Outlook Planner Source                 *)
(*                                                                            *)
(* Shorter Path Planners                                                      *)
(*                                                                            *)
(* Copyright © 2004, 2007 Shorter Path Software                               *)
(* http://www.shorterpath.com                                                 *)
(*                                                                            *)
(* Portions based on code generated by EventSinkImp by Binh Ly.               *)
(*   EventSinkImp is Copyright © 1999-2001 Binh Ly. All Rights Reserved.      *)
(*   http://www.techvanguards.com/products/eventsinkimp                       *)
(******************************************************************************)

unit SPOutlook;

{$IFDEF CONDITIONALEXPRESSIONS}
{$IF RTLVersion >= 14.0}
  {$WARN SYMBOL_PLATFORM OFF}
{$IFEND}
{$ENDIF}
{$ObjExportAll On}

interface

uses
  Windows, ActiveX, Classes, ComObj, OleCtrls, StdVCL;

type
  TItemsEventsItemAddEvent = procedure(Sender: TObject; const Item: IDispatch) of object;
  TItemsEventsItemChangeEvent = procedure(Sender: TObject; const Item: IDispatch) of object;
  TItemsEventsItemRemoveEvent = procedure(Sender: TObject) of object;

  TSPOulookItemsEvents = class(TComponent, IUnknown, IDispatch)
  protected
    function QueryInterface(const IID: TGUID; out Obj): HResult; override; stdcall;
    function _AddRef: Integer; stdcall;
    function _Release: Integer; stdcall;
    function GetIDsOfNames(const IID: TGUID; Names: Pointer;
      NameCount, LocaleID: Integer; DispIDs: Pointer): HResult; virtual; stdcall;
    function GetTypeInfo(Index, LocaleID: Integer; out TypeInfo): HResult; virtual; stdcall;
    function GetTypeInfoCount(out Count: Integer): HResult; virtual; stdcall;
    function Invoke(DispID: Integer; const IID: TGUID; LocaleID: Integer;
      Flags: Word; var Params; VarResult, ExcepInfo, ArgErr: Pointer): HResult; virtual; stdcall;
  protected
    FCookie: integer;
    FCP: IConnectionPoint;
    FSinkIID: TGUID;
    FSource: IUnknown;
    FOnItemAdd: TItemsEventsItemAddEvent;
    FOnItemChange: TItemsEventsItemChangeEvent;
    FOnItemRemove: TItemsEventsItemRemoveEvent;
    function DoInvoke(DispID: Integer; const IID: TGUID; LocaleID: Integer;
      Flags: Word; var dps: TDispParams; pDispIds: PDispIdList;
      VarResult, ExcepInfo, ArgErr: Pointer): HResult;
    procedure DoItemAdd(const Item: IDispatch); safecall;
    procedure DoItemChange(const Item: IDispatch); safecall;
    procedure DoItemRemove; safecall;
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    procedure Connect(const ASource: IUnknown);
    procedure Disconnect;
    property SinkIID: TGUID read FSinkIID write FSinkIID;
    property Source: IUnknown read FSource;
  published
    property OnItemAdd: TItemsEventsItemAddEvent read FOnItemAdd write FOnItemAdd;
    property OnItemChange: TItemsEventsItemChangeEvent read FOnItemChange write FOnItemChange;
    property OnItemRemove: TItemsEventsItemRemoveEvent read FOnItemRemove write FOnItemRemove;
  end;

  Signature = interface;
  OlActionCopyLike = TOleEnum;
  OlActionReplyStyle = TOleEnum;
  OlActionResponseStyle = TOleEnum;
  OlActionShowOn = TOleEnum;
  OlAttachmentType = TOleEnum;
  OlBusyStatus = TOleEnum;
  OlDaysOfWeek = TOleEnum;
  OlDefaultFolders = TOleEnum;
  OlDisplayType = TOleEnum;
  OlEditorType = TOleEnum;
  OlFlagStatus = TOleEnum;
  OlFolderDisplayMode = TOleEnum;
  OlFormRegistry = TOleEnum;
  OlGender = TOleEnum;
  OlImportance = TOleEnum;
  OlInspectorClose = TOleEnum;
  OlItemType = TOleEnum;
  OlJournalRecipientType = TOleEnum;
  OlMailingAddress = TOleEnum;
  OlMailRecipientType = TOleEnum;
  OlMeetingRecipientType = TOleEnum;
  OlMeetingResponse = TOleEnum;
  OlMeetingStatus = TOleEnum;
  OlNetMeetingType = TOleEnum;
  OlNoteColor = TOleEnum;
  OlObjectClass = TOleEnum;
  OlOutlookBarViewType = TOleEnum;
  OlPane = TOleEnum;
  OlRecurrenceState = TOleEnum;
  OlRecurrenceType = TOleEnum;
  OlRemoteStatus = TOleEnum;
  OlResponseStatus = TOleEnum;
  OlSaveAsType = TOleEnum;
  OlSensitivity = TOleEnum;
  OlSortOrder = TOleEnum;
  OlTaskDelegationState = TOleEnum;
  OlTaskOwnership = TOleEnum;
  OlTaskRecipientType = TOleEnum;
  OlTaskResponse = TOleEnum;
  OlTaskStatus = TOleEnum;
  OlTrackingStatus = TOleEnum;
  OlUserPropertyType = TOleEnum;
  OlWindowState = TOleEnum;
  OlSyncState = TOleEnum;
  OlBodyFormat = TOleEnum;
  OlDownloadState = TOleEnum;
  OlOfficeDocItemsType = TOleEnum;
  OlViewSaveOption = TOleEnum;
  OlViewType = TOleEnum;
  OlFlagIcon = TOleEnum;
  OlExchangeConnectionMode = TOleEnum;
  OlShowItemCount = TOleEnum;
  OlStoreType = TOleEnum;
  OlPermission = TOleEnum;
  OlPermissionService = TOleEnum;
  _Application = interface;
  _NameSpace = interface;
  Recipient = interface;
  AddressEntry = interface;
  AddressEntries = interface;
  _Folders = interface;
  MAPIFolder = interface;
  _Items = interface;
  _Explorer = interface;
  Panes = interface;
  Selection = interface;
  View = interface;
  _Views = interface;
  AddressLists = interface;
  AddressList = interface;
  _Inspector = interface;
  _Explorers = interface;
  _Inspectors = interface;
  Search = interface;
  _Results = interface;
  _Reminders = interface;
  _Reminder = interface;
  Actions = interface;
  PropertyPages = interface;
  _AppointmentItem = interface;
  Attachments = interface;
  Attachment = interface;
  FormDescription = interface;
  UserProperties = interface;
  UserProperty = interface;
  Recipients = interface;
  _MailItem = interface;
  Links = interface;
  Link = interface;
  ItemProperties = interface;
  ItemProperty = interface;
  Conflicts = interface;
  Conflict = interface;
  RecurrencePattern = interface;
  Exceptions = interface;
  _Exception = interface;
  _MeetingItem = interface;
  _ContactItem = interface;
  _DistListItem = interface;
  _DocumentItem = interface;
  _JournalItem = interface;
  _NoteItem = interface;
  OutlookBarGroup = interface;
  _OutlookBarShortcuts = interface;
  OutlookBarShortcut = interface;
  _OutlookBarGroups = interface;
  _OutlookBarPane = interface;
  OutlookBarStorage = interface;
  PropertyPage = interface;
  PropertyPageSite = interface;
  Pages = interface;
  _PostItem = interface;
  _RemoteItem = interface;
  _ReportItem = interface;
  _TaskItem = interface;
  _TaskRequestAcceptItem = interface;
  _TaskRequestDeclineItem = interface;
  _TaskRequestItem = interface;
  _TaskRequestUpdateItem = interface;
  _IRecipientControl = interface;
  _IDocSiteControl = interface;
  Explorer = _Explorer;
  Inspector = _Inspector;
  MailItem = _MailItem;
  AppointmentItem = _AppointmentItem;
  MeetingItem = _MeetingItem;
  TaskItem = _TaskItem;
  OutlookApplication = _Application;
  ContactItem = _ContactItem;
  DistListItem = _DistListItem;
  DocumentItem = _DocumentItem;
  Explorers = _Explorers;
  Inspectors = _Inspectors;
  Folders = _Folders;
  Items = _Items;
  JournalItem = _JournalItem;
  NameSpace = _NameSpace;
  NoteItem = _NoteItem;
  OutlookBarGroups = _OutlookBarGroups;
  OutlookBarPane = _OutlookBarPane;
  OutlookBarShortcuts = _OutlookBarShortcuts;
  PostItem = _PostItem;
  RemoteItem = _RemoteItem;
  ReportItem = _ReportItem;
  TaskRequestAcceptItem = _TaskRequestAcceptItem;
  TaskRequestDeclineItem = _TaskRequestDeclineItem;
  TaskRequestItem = _TaskRequestItem;
  TaskRequestUpdateItem = _TaskRequestUpdateItem;
  Results = _Results;
  Views = _Views;
  Reminder = _Reminder;
  Reminders = _Reminders;

  _IMsoDispObj = interface(IDispatch)
    ['{000C0300-0000-0000-C000-000000000046}']
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;
  COMAddIn = interface(_IMsoDispObj)
    ['{000C033A-0000-0000-C000-000000000046}']
    function Get_Description: WideString; safecall;
    procedure Set_Description(const RetValue: WideString); safecall;
    function Get_ProgId: WideString; safecall;
    function Get_Guid: WideString; safecall;
    function Get_Connect: WordBool; safecall;
    procedure Set_Connect(RetValue: WordBool); safecall;
    function Get_Object_: IDispatch; safecall;
    procedure Set_Object_(const RetValue: IDispatch); safecall;
    function Get_Parent: IDispatch; safecall;
    property Description: WideString read Get_Description write Set_Description;
    property ProgId: WideString read Get_ProgId;
    property Guid: WideString read Get_Guid;
    property Connect: WordBool read Get_Connect write Set_Connect;
    property Object_: IDispatch read Get_Object_ write Set_Object_;
    property Parent: IDispatch read Get_Parent;
  end;
  COMAddIns = interface(_IMsoDispObj)
    ['{000C0339-0000-0000-C000-000000000046}']
    function Item(var Index: OleVariant): COMAddIn; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    procedure Update; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure SetAppModal(varfModal: WordBool); safecall;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Parent: IDispatch read Get_Parent;
  end;
  SignatureSet = interface(_IMsoDispObj)
    ['{000C0410-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: SYSINT; safecall;
    function Get_Item(iSig: SYSINT): Signature; safecall;
    function Add: Signature; safecall;
    procedure Commit; safecall;
    function Get_Parent: IDispatch; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: SYSINT read Get_Count;
    property Item[iSig: SYSINT]: Signature read Get_Item; default;
    property Parent: IDispatch read Get_Parent;
  end;
  Signature = interface(_IMsoDispObj)
    ['{000C0411-0000-0000-C000-000000000046}']
    function Get_Signer: WideString; safecall;
    function Get_Issuer: WideString; safecall;
    function Get_ExpireDate: OleVariant; safecall;
    function Get_IsValid: WordBool; safecall;
    function Get_AttachCertificate: WordBool; safecall;
    procedure Set_AttachCertificate(pfAttach: WordBool); safecall;
    procedure Delete; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_IsCertificateExpired: WordBool; safecall;
    function Get_IsCertificateRevoked: WordBool; safecall;
    function Get_SignDate: OleVariant; safecall;
    property Signer: WideString read Get_Signer;
    property Issuer: WideString read Get_Issuer;
    property ExpireDate: OleVariant read Get_ExpireDate;
    property IsValid: WordBool read Get_IsValid;
    property AttachCertificate: WordBool read Get_AttachCertificate write Set_AttachCertificate;
    property Parent: IDispatch read Get_Parent;
    property IsCertificateExpired: WordBool read Get_IsCertificateExpired;
    property IsCertificateRevoked: WordBool read Get_IsCertificateRevoked;
    property SignDate: OleVariant read Get_SignDate;
  end;
  Action = interface(IDispatch)
    ['{00063043-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CopyLike: OlActionCopyLike; safecall;
    procedure Set_CopyLike(CopyLike: OlActionCopyLike); safecall;
    function Get_Enabled: WordBool; safecall;
    procedure Set_Enabled(Enabled: WordBool); safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_Prefix: WideString; safecall;
    procedure Set_Prefix(const Prefix: WideString); safecall;
    function Get_ReplyStyle: OlActionReplyStyle; safecall;
    procedure Set_ReplyStyle(ReplyStyle: OlActionReplyStyle); safecall;
    function Get_ResponseStyle: OlActionResponseStyle; safecall;
    procedure Set_ResponseStyle(ResponseStyle: OlActionResponseStyle); safecall;
    function Get_ShowOn: OlActionShowOn; safecall;
    procedure Set_ShowOn(ShowOn: OlActionShowOn); safecall;
    procedure Delete; safecall;
    function Execute: IDispatch; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property CopyLike: OlActionCopyLike read Get_CopyLike write Set_CopyLike;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Name: WideString read Get_Name write Set_Name;
    property Prefix: WideString read Get_Prefix write Set_Prefix;
    property ReplyStyle: OlActionReplyStyle read Get_ReplyStyle write Set_ReplyStyle;
    property ResponseStyle: OlActionResponseStyle read Get_ResponseStyle write Set_ResponseStyle;
    property ShowOn: OlActionShowOn read Get_ShowOn write Set_ShowOn;
  end;
  _Application = interface(IDispatch)
    ['{00063001-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Assistant: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Version: WideString; safecall;
    function ActiveExplorer: _Explorer; safecall;
    function ActiveInspector: _Inspector; safecall;
    function CreateItem(ItemType: OlItemType): IDispatch; safecall;
    function CreateItemFromTemplate(const TemplatePath: WideString; InFolder: OleVariant): IDispatch; safecall;
    function CreateObject(const ObjectName: WideString): IDispatch; safecall;
    function GetNamespace(const Type_: WideString): _NameSpace; safecall;
    procedure Quit; safecall;
    function Get_COMAddIns: COMAddIns; safecall;
    function Get_Explorers: _Explorers; safecall;
    function Get_Inspectors: _Inspectors; safecall;
    function Get_LanguageSettings: IDispatch; safecall;
    function Get_ProductCode: WideString; safecall;
    function Get_AnswerWizard: IDispatch; safecall;
    function Get_FeatureInstall: IDispatch; safecall;
    procedure Set_FeatureInstall(FeatureInstall: IDispatch); safecall;
    function ActiveWindow: IDispatch; safecall;
    function CopyFile(const FilePath: WideString; const DestFolderPath: WideString): IDispatch; safecall;
    function AdvancedSearch(const Scope: WideString; Filter: OleVariant; 
                            SearchSubFolders: OleVariant; Tag: OleVariant): Search; safecall;
    function IsSearchSynchronous(const LookInFolders: WideString): WordBool; safecall;
    procedure GetNewNickNames(var pvar: OleVariant); safecall;
    function Get_Reminders: _Reminders; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Assistant: IDispatch read Get_Assistant;
    property Name: WideString read Get_Name;
    property Version: WideString read Get_Version;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property Explorers: _Explorers read Get_Explorers;
    property Inspectors: _Inspectors read Get_Inspectors;
    property LanguageSettings: IDispatch read Get_LanguageSettings;
    property ProductCode: WideString read Get_ProductCode;
    property AnswerWizard: IDispatch read Get_AnswerWizard;
    property FeatureInstall: IDispatch read Get_FeatureInstall write Set_FeatureInstall;
    property Reminders: _Reminders read Get_Reminders;
  end;
  _NameSpace = interface(IDispatch)
    ['{00063002-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CurrentUser: Recipient; safecall;
    function Get_Folders: _Folders; safecall;
    function Get_type_: WideString; safecall;
    function Get_AddressLists: AddressLists; safecall;
    function CreateRecipient(const RecipientName: WideString): Recipient; safecall;
    function GetDefaultFolder(FolderType: OlDefaultFolders): MAPIFolder; safecall;
    function GetFolderFromID(const EntryIDFolder: WideString; EntryIDStore: OleVariant): MAPIFolder; safecall;
    function GetItemFromID(const EntryIDItem: WideString; EntryIDStore: OleVariant): IDispatch; safecall;
    function GetRecipientFromID(const EntryID: WideString): Recipient; safecall;
    function GetSharedDefaultFolder(const Recipient: Recipient; FolderType: OlDefaultFolders): MAPIFolder; safecall;
    procedure Logoff; safecall;
    procedure Logon(Profile: OleVariant; Password: OleVariant; ShowDialog: OleVariant; 
                    NewSession: OleVariant); safecall;
    function PickFolder: MAPIFolder; safecall;
    procedure RefreshRemoteHeaders; safecall;
    function Get_SyncObjects: IDispatch; safecall;
    procedure AddStore(Store: OleVariant); safecall;
    procedure RemoveStore(const Folder: MAPIFolder); safecall;
    function Get_Offline: WordBool; safecall;
    procedure Dial(ContactItem: OleVariant); safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_ExchangeConnectionMode: OlExchangeConnectionMode; safecall;
    procedure AddStoreEx(Store: OleVariant; Type_: OlStoreType); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property CurrentUser: Recipient read Get_CurrentUser;
    property Folders: _Folders read Get_Folders;
    property type_: WideString read Get_type_;
    property AddressLists: AddressLists read Get_AddressLists;
    property SyncObjects: IDispatch read Get_SyncObjects;
    property Offline: WordBool read Get_Offline;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property ExchangeConnectionMode: OlExchangeConnectionMode read Get_ExchangeConnectionMode;
  end;
  Recipient = interface(IDispatch)
    ['{00063045-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Address: WideString; safecall;
    function Get_AddressEntry: AddressEntry; safecall;
    procedure _Set_AddressEntry(const AddressEntry: AddressEntry); safecall;
    function Get_AutoResponse: WideString; safecall;
    procedure Set_AutoResponse(const AutoResponse: WideString); safecall;
    function Get_DisplayType: OlDisplayType; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_MeetingResponseStatus: OlResponseStatus; safecall;
    function Get_Name: WideString; safecall;
    function Get_Resolved: WordBool; safecall;
    function Get_TrackingStatus: OlTrackingStatus; safecall;
    procedure Set_TrackingStatus(TrackingStatus: OlTrackingStatus); safecall;
    function Get_TrackingStatusTime: TDateTime; safecall;
    procedure Set_TrackingStatusTime(TrackingStatusTime: TDateTime); safecall;
    function Get_type_: Integer; safecall;
    procedure Set_type_(Type_: Integer); safecall;
    procedure Delete; safecall;
    function FreeBusy(Start: TDateTime; MinPerChar: Integer; CompleteFormat: OleVariant): WideString; safecall;
    function Resolve: WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Address: WideString read Get_Address;
    property AddressEntry: AddressEntry read Get_AddressEntry write _Set_AddressEntry;
    property AutoResponse: WideString read Get_AutoResponse write Set_AutoResponse;
    property DisplayType: OlDisplayType read Get_DisplayType;
    property EntryID: WideString read Get_EntryID;
    property Index: Integer read Get_Index;
    property MeetingResponseStatus: OlResponseStatus read Get_MeetingResponseStatus;
    property Name: WideString read Get_Name;
    property Resolved: WordBool read Get_Resolved;
    property TrackingStatus: OlTrackingStatus read Get_TrackingStatus write Set_TrackingStatus;
    property TrackingStatusTime: TDateTime read Get_TrackingStatusTime write Set_TrackingStatusTime;
    property type_: Integer read Get_type_ write Set_type_;
  end;
  AddressEntry = interface(IDispatch)
    ['{0006304B-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Address: WideString; safecall;
    procedure Set_Address(const Address: WideString); safecall;
    function Get_DisplayType: OlDisplayType; safecall;
    function Get_ID: WideString; safecall;
    function Get_Manager: AddressEntry; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    procedure Set_MAPIOBJECT(const MAPIOBJECT: IUnknown); safecall;
    function Get_Members: AddressEntries; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_type_(const Type_: WideString); safecall;
    procedure Delete; safecall;
    procedure Details(HWnd: OleVariant); safecall;
    function GetFreeBusy(Start: TDateTime; MinPerChar: Integer; CompleteFormat: OleVariant): WideString; safecall;
    procedure Update(MakePermanent: OleVariant; Refresh: OleVariant); safecall;
    procedure UpdateFreeBusy; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Address: WideString read Get_Address write Set_Address;
    property DisplayType: OlDisplayType read Get_DisplayType;
    property ID: WideString read Get_ID;
    property Manager: AddressEntry read Get_Manager;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT write Set_MAPIOBJECT;
    property Members: AddressEntries read Get_Members;
    property Name: WideString read Get_Name write Set_Name;
    property type_: WideString read Get_type_ write Set_type_;
  end;
  AddressEntries = interface(IDispatch)
    ['{0006304A-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): AddressEntry; safecall;
    function Get_RawTable: IUnknown; safecall;
    function Add(const Type_: WideString; Name: OleVariant; Address: OleVariant): AddressEntry; safecall;
    function GetFirst: AddressEntry; safecall;
    function GetLast: AddressEntry; safecall;
    function GetNext: AddressEntry; safecall;
    function GetPrevious: AddressEntry; safecall;
    procedure Sort(Property_: OleVariant; Order: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property RawTable: IUnknown read Get_RawTable;
  end;
  _Folders = interface(IDispatch)
    ['{00063040-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): MAPIFolder; safecall;
    function Get_RawTable: IUnknown; safecall;
    function Add(const Name: WideString; Type_: OleVariant): MAPIFolder; safecall;
    function GetFirst: MAPIFolder; safecall;
    function GetLast: MAPIFolder; safecall;
    function GetNext: MAPIFolder; safecall;
    function GetPrevious: MAPIFolder; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property RawTable: IUnknown read Get_RawTable;
  end;
  MAPIFolder = interface(IDispatch)
    ['{00063006-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_DefaultItemType: OlItemType; safecall;
    function Get_DefaultMessageClass: WideString; safecall;
    function Get_Description: WideString; safecall;
    procedure Set_Description(const Description: WideString); safecall;
    function Get_EntryID: WideString; safecall;
    function Get_Folders: _Folders; safecall;
    function Get_Items: _Items; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_StoreID: WideString; safecall;
    function Get_UnReadItemCount: Integer; safecall;
    function CopyTo(const DestinationFolder: MAPIFolder): MAPIFolder; safecall;
    procedure Delete; safecall;
    procedure Display; safecall;
    function GetExplorer(DisplayMode: OleVariant): _Explorer; safecall;
    procedure MoveTo(const DestinationFolder: MAPIFolder); safecall;
    function Get_UserPermissions: IDispatch; safecall;
    function Get_WebViewOn: WordBool; safecall;
    procedure Set_WebViewOn(WebViewOn: WordBool); safecall;
    function Get_WebViewURL: WideString; safecall;
    procedure Set_WebViewURL(const WebViewURL: WideString); safecall;
    function Get_WebViewAllowNavigation: WordBool; safecall;
    procedure Set_WebViewAllowNavigation(WebViewAllowNavigation: WordBool); safecall;
    procedure AddToPFFavorites; safecall;
    function Get_AddressBookName: WideString; safecall;
    procedure Set_AddressBookName(const AddressBookName: WideString); safecall;
    function Get_ShowAsOutlookAB: WordBool; safecall;
    procedure Set_ShowAsOutlookAB(ShowAsOutlookAB: WordBool); safecall;
    function Get_FolderPath: WideString; safecall;
    procedure AddToFavorites(fNoUI: OleVariant; Name: OleVariant); safecall;
    function Get_InAppFolderSyncObject: WordBool; safecall;
    procedure Set_InAppFolderSyncObject(InAppFolderSyncObject: WordBool); safecall;
    function Get_CurrentView: View; safecall;
    function Get_CustomViewsOnly: WordBool; safecall;
    procedure Set_CustomViewsOnly(CustomViewsOnly: WordBool); safecall;
    function Get_Views: _Views; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_FullFolderPath: WideString; safecall;
    function Get_IsSharePointFolder: WordBool; safecall;
    function Get_ShowItemCount: OlShowItemCount; safecall;
    procedure Set_ShowItemCount(ShowItemCount: OlShowItemCount); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property DefaultItemType: OlItemType read Get_DefaultItemType;
    property DefaultMessageClass: WideString read Get_DefaultMessageClass;
    property Description: WideString read Get_Description write Set_Description;
    property EntryID: WideString read Get_EntryID;
    property Folders: _Folders read Get_Folders;
    property Items: _Items read Get_Items;
    property Name: WideString read Get_Name write Set_Name;
    property StoreID: WideString read Get_StoreID;
    property UnReadItemCount: Integer read Get_UnReadItemCount;
    property UserPermissions: IDispatch read Get_UserPermissions;
    property WebViewOn: WordBool read Get_WebViewOn write Set_WebViewOn;
    property WebViewURL: WideString read Get_WebViewURL write Set_WebViewURL;
    property WebViewAllowNavigation: WordBool read Get_WebViewAllowNavigation write Set_WebViewAllowNavigation;
    property AddressBookName: WideString read Get_AddressBookName write Set_AddressBookName;
    property ShowAsOutlookAB: WordBool read Get_ShowAsOutlookAB write Set_ShowAsOutlookAB;
    property FolderPath: WideString read Get_FolderPath;
    property InAppFolderSyncObject: WordBool read Get_InAppFolderSyncObject write Set_InAppFolderSyncObject;
    property CurrentView: View read Get_CurrentView;
    property CustomViewsOnly: WordBool read Get_CustomViewsOnly write Set_CustomViewsOnly;
    property Views: _Views read Get_Views;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property FullFolderPath: WideString read Get_FullFolderPath;
    property IsSharePointFolder: WordBool read Get_IsSharePointFolder;
    property ShowItemCount: OlShowItemCount read Get_ShowItemCount write Set_ShowItemCount;
  end;
  _Items = interface(IDispatch)
    ['{00063041-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    function Get_RawTable: IUnknown; safecall;
    function Get_IncludeRecurrences: WordBool; safecall;
    procedure Set_IncludeRecurrences(IncludeRecurrences: WordBool); safecall;
    function Add(Type_: OleVariant): IDispatch; safecall;
    function Find(const Filter: WideString): IDispatch; safecall;
    function FindNext: IDispatch; safecall;
    function GetFirst: IDispatch; safecall;
    function GetLast: IDispatch; safecall;
    function GetNext: IDispatch; safecall;
    function GetPrevious: IDispatch; safecall;
    procedure Remove(Index: Integer); safecall;
    procedure ResetColumns; safecall;
    function Restrict(const Filter: WideString): _Items; safecall;
    procedure SetColumns(const Columns: WideString); safecall;
    procedure Sort(const Property_: WideString; Descending: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property RawTable: IUnknown read Get_RawTable;
    property IncludeRecurrences: WordBool read Get_IncludeRecurrences write Set_IncludeRecurrences;
  end;
  _Explorer = interface(IDispatch)
    ['{00063003-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CommandBars: IDispatch; safecall;
    function Get_CurrentFolder: MAPIFolder; safecall;
    procedure _Set_CurrentFolder(const CurrentFolder: MAPIFolder); safecall;
    procedure Close; safecall;
    procedure Display; safecall;
    function Get_Caption: WideString; safecall;
    function Get_CurrentView: OleVariant; safecall;
    procedure Set_CurrentView(CurrentView: OleVariant); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(Height: Integer); safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(Left: Integer); safecall;
    function Get_Panes: Panes; safecall;
    function Get_Selection: Selection; safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(Top: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(Width: Integer); safecall;
    function Get_WindowState: OlWindowState; safecall;
    procedure Set_WindowState(WindowState: OlWindowState); safecall;
    procedure Activate; safecall;
    function IsPaneVisible(Pane: OlPane): WordBool; safecall;
    procedure ShowPane(Pane: OlPane; Visible: WordBool); safecall;
    function Get_Views: IDispatch; safecall;
    function Get_HTMLDocument: IDispatch; safecall;
    procedure SelectFolder(const Folder: MAPIFolder); safecall;
    procedure DeselectFolder(const Folder: MAPIFolder); safecall;
    function IsFolderSelected(const Folder: MAPIFolder): WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property CommandBars: IDispatch read Get_CommandBars;
    property CurrentFolder: MAPIFolder read Get_CurrentFolder write _Set_CurrentFolder;
    property Caption: WideString read Get_Caption;
    property CurrentView: OleVariant read Get_CurrentView write Set_CurrentView;
    property Height: Integer read Get_Height write Set_Height;
    property Left: Integer read Get_Left write Set_Left;
    property Panes: Panes read Get_Panes;
    property Selection: Selection read Get_Selection;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property WindowState: OlWindowState read Get_WindowState write Set_WindowState;
    property Views: IDispatch read Get_Views;
    property HTMLDocument: IDispatch read Get_HTMLDocument;
  end;
  Panes = interface(IDispatch)
    ['{00063009-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  Selection = interface(IDispatch)
    ['{00063087-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  View = interface(IDispatch)
    ['{00063095-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Apply; safecall;
    function Copy(const Name: WideString; SaveOption: OlViewSaveOption): View; safecall;
    procedure Delete; safecall;
    procedure Reset; safecall;
    procedure Save; safecall;
    function Get_Language: WideString; safecall;
    procedure Set_Language(const Language: WideString); safecall;
    function Get_LockUserChanges: WordBool; safecall;
    procedure Set_LockUserChanges(LockUserChanges: WordBool); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_SaveOption: OlViewSaveOption; safecall;
    function Get_Standard: WordBool; safecall;
    function Get_ViewType: OlViewType; safecall;
    function Get_XML: WideString; safecall;
    procedure Set_XML(const XML: WideString); safecall;
    procedure GoToDate(Date: TDateTime); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Language: WideString read Get_Language write Set_Language;
    property LockUserChanges: WordBool read Get_LockUserChanges write Set_LockUserChanges;
    property Name: WideString read Get_Name write Set_Name;
    property SaveOption: OlViewSaveOption read Get_SaveOption;
    property Standard: WordBool read Get_Standard;
    property ViewType: OlViewType read Get_ViewType;
    property XML: WideString read Get_XML write Set_XML;
  end;
  _Views = interface(IDispatch)
    ['{0006308D-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): View; safecall;
    function Add(const Name: WideString; ViewType: OlViewType; SaveOption: OlViewSaveOption): View; safecall;
    procedure Remove(Index: OleVariant); safecall;
    function _NewEnum: IUnknown; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  AddressLists = interface(IDispatch)
    ['{00063048-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): AddressList; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  AddressList = interface(IDispatch)
    ['{00063049-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AddressEntries: AddressEntries; safecall;
    function Get_ID: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_IsReadOnly: WordBool; safecall;
    function Get_Name: WideString; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property AddressEntries: AddressEntries read Get_AddressEntries;
    property ID: WideString read Get_ID;
    property Index: Integer read Get_Index;
    property IsReadOnly: WordBool read Get_IsReadOnly;
    property Name: WideString read Get_Name;
  end;
  _Inspector = interface(IDispatch)
    ['{00063005-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CommandBars: IDispatch; safecall;
    function Get_CurrentItem: IDispatch; safecall;
    function Get_EditorType: OlEditorType; safecall;
    function Get_ModifiedFormPages: IDispatch; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    procedure Display(Modal: OleVariant); safecall;
    procedure HideFormPage(const PageName: WideString); safecall;
    function IsWordMail: WordBool; safecall;
    procedure SetCurrentFormPage(const PageName: WideString); safecall;
    procedure ShowFormPage(const PageName: WideString); safecall;
    function Get_HTMLEditor: IDispatch; safecall;
    function Get_WordEditor: IDispatch; safecall;
    function Get_Caption: WideString; safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(Height: Integer); safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(Left: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(Top: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(Width: Integer); safecall;
    function Get_WindowState: OlWindowState; safecall;
    procedure Set_WindowState(WindowState: OlWindowState); safecall;
    procedure Activate; safecall;
    procedure SetControlItemProperty(const Control: IDispatch; const PropertyName: WideString); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property CommandBars: IDispatch read Get_CommandBars;
    property CurrentItem: IDispatch read Get_CurrentItem;
    property EditorType: OlEditorType read Get_EditorType;
    property ModifiedFormPages: IDispatch read Get_ModifiedFormPages;
    property HTMLEditor: IDispatch read Get_HTMLEditor;
    property WordEditor: IDispatch read Get_WordEditor;
    property Caption: WideString read Get_Caption;
    property Height: Integer read Get_Height write Set_Height;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property WindowState: OlWindowState read Get_WindowState write Set_WindowState;
  end;
  _Explorers = interface(IDispatch)
    ['{0006300A-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Explorer; safecall;
    function Add(Folder: OleVariant; DisplayMode: OlFolderDisplayMode): _Explorer; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _Inspectors = interface(IDispatch)
    ['{00063008-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Inspector; safecall;
    function Add(const Item: IDispatch): _Inspector; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  Search = interface(IDispatch)
    ['{0006300B-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Filter: WideString; safecall;
    function Get_IsSynchronous: WordBool; safecall;
    function Get_Results: _Results; safecall;
    function Get_SearchSubFolders: WordBool; safecall;
    procedure Stop; safecall;
    function Get_Tag: WideString; safecall;
    function Get_Scope: WideString; safecall;
    function Save(const Name: WideString): MAPIFolder; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Filter: WideString read Get_Filter;
    property IsSynchronous: WordBool read Get_IsSynchronous;
    property Results: _Results read Get_Results;
    property SearchSubFolders: WordBool read Get_SearchSubFolders;
    property Tag: WideString read Get_Tag;
    property Scope: WideString read Get_Scope;
  end;
  _Results = interface(IDispatch)
    ['{0006300C-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    function Get_RawTable: IUnknown; safecall;
    function GetFirst: IDispatch; safecall;
    function GetLast: IDispatch; safecall;
    function GetNext: IDispatch; safecall;
    function GetPrevious: IDispatch; safecall;
    procedure ResetColumns; safecall;
    procedure SetColumns(const Columns: WideString); safecall;
    procedure Sort(const Property_: WideString; Descending: OleVariant); safecall;
    function Get_DefaultItemType: OlItemType; safecall;
    procedure Set_DefaultItemType(DefaultItemType: OlItemType); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property RawTable: IUnknown read Get_RawTable;
    property DefaultItemType: OlItemType read Get_DefaultItemType write Set_DefaultItemType;
  end;
  _Reminders = interface(IDispatch)
    ['{000630B1-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): _Reminder; safecall;
    procedure Remove(Index: OleVariant); safecall;
    function _NewEnum: IUnknown; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _Reminder = interface(IDispatch)
    ['{000630B0-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Dismiss; safecall;
    procedure Snooze(SnoozeTime: OleVariant); safecall;
    function Get_Caption: WideString; safecall;
    function Get_IsVisible: WordBool; safecall;
    function Get_Item: IDispatch; safecall;
    function Get_NextReminderDate: TDateTime; safecall;
    function Get_OriginalReminderDate: TDateTime; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Caption: WideString read Get_Caption;
    property IsVisible: WordBool read Get_IsVisible;
    property Item: IDispatch read Get_Item;
    property NextReminderDate: TDateTime read Get_NextReminderDate;
    property OriginalReminderDate: TDateTime read Get_OriginalReminderDate;
  end;
  Actions = interface(IDispatch)
    ['{0006303E-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Action; safecall;
    function Add: Action; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  PropertyPages = interface(IDispatch)
    ['{00063080-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    procedure Add(Page: OleVariant; const Title: WideString); safecall;
    procedure Remove(Index: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _AppointmentItem = interface(IDispatch)
    ['{00063033-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_AllDayEvent: WordBool; safecall;
    procedure Set_AllDayEvent(AllDayEvent: WordBool); safecall;
    function Get_BusyStatus: OlBusyStatus; safecall;
    procedure Set_BusyStatus(BusyStatus: OlBusyStatus); safecall;
    function Get_Duration: Integer; safecall;
    procedure Set_Duration(Duration: Integer); safecall;
    function Get_End_: TDateTime; safecall;
    procedure Set_End_(End_: TDateTime); safecall;
    function Get_IsOnlineMeeting: WordBool; safecall;
    procedure Set_IsOnlineMeeting(IsOnlineMeeting: WordBool); safecall;
    function Get_IsRecurring: WordBool; safecall;
    function Get_Location: WideString; safecall;
    procedure Set_Location(const Location: WideString); safecall;
    function Get_MeetingStatus: OlMeetingStatus; safecall;
    procedure Set_MeetingStatus(MeetingStatus: OlMeetingStatus); safecall;
    function Get_NetMeetingAutoStart: WordBool; safecall;
    procedure Set_NetMeetingAutoStart(NetMeetingAutoStart: WordBool); safecall;
    function Get_NetMeetingOrganizerAlias: WideString; safecall;
    procedure Set_NetMeetingOrganizerAlias(const NetMeetingOrganizerAlias: WideString); safecall;
    function Get_NetMeetingServer: WideString; safecall;
    procedure Set_NetMeetingServer(const NetMeetingServer: WideString); safecall;
    function Get_NetMeetingType: OlNetMeetingType; safecall;
    procedure Set_NetMeetingType(NetMeetingType: OlNetMeetingType); safecall;
    function Get_OptionalAttendees: WideString; safecall;
    procedure Set_OptionalAttendees(const OptionalAttendees: WideString); safecall;
    function Get_Organizer: WideString; safecall;
    function Get_Recipients: Recipients; safecall;
    function Get_RecurrenceState: OlRecurrenceState; safecall;
    function Get_ReminderMinutesBeforeStart: Integer; safecall;
    procedure Set_ReminderMinutesBeforeStart(ReminderMinutesBeforeStart: Integer); safecall;
    function Get_ReminderOverrideDefault: WordBool; safecall;
    procedure Set_ReminderOverrideDefault(ReminderOverrideDefault: WordBool); safecall;
    function Get_ReminderPlaySound: WordBool; safecall;
    procedure Set_ReminderPlaySound(ReminderPlaySound: WordBool); safecall;
    function Get_ReminderSet: WordBool; safecall;
    procedure Set_ReminderSet(ReminderSet: WordBool); safecall;
    function Get_ReminderSoundFile: WideString; safecall;
    procedure Set_ReminderSoundFile(const ReminderSoundFile: WideString); safecall;
    function Get_ReplyTime: TDateTime; safecall;
    procedure Set_ReplyTime(ReplyTime: TDateTime); safecall;
    function Get_RequiredAttendees: WideString; safecall;
    procedure Set_RequiredAttendees(const RequiredAttendees: WideString); safecall;
    function Get_Resources: WideString; safecall;
    procedure Set_Resources(const Resources: WideString); safecall;
    function Get_ResponseRequested: WordBool; safecall;
    procedure Set_ResponseRequested(ResponseRequested: WordBool); safecall;
    function Get_ResponseStatus: OlResponseStatus; safecall;
    function Get_Start: TDateTime; safecall;
    procedure Set_Start(Start: TDateTime); safecall;
    procedure ClearRecurrencePattern; safecall;
    function ForwardAsVcal: MailItem; safecall;
    function GetRecurrencePattern: RecurrencePattern; safecall;
    function Respond(Response: OlMeetingResponse; fNoUI: OleVariant; 
                     fAdditionalTextDialog: OleVariant): MeetingItem; safecall;
    procedure Send; safecall;
    function Get_NetMeetingDocPathName: WideString; safecall;
    procedure Set_NetMeetingDocPathName(const NetMeetingDocPathName: WideString); safecall;
    function Get_NetShowURL: WideString; safecall;
    procedure Set_NetShowURL(const NetShowURL: WideString); safecall;
    function Get_Links: Links; safecall;
    function Get_ConferenceServerAllowExternal: WordBool; safecall;
    procedure Set_ConferenceServerAllowExternal(ConferenceServerAllowExternal: WordBool); safecall;
    function Get_ConferenceServerPassword: WideString; safecall;
    procedure Set_ConferenceServerPassword(const ConferenceServerPassword: WideString); safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_InternetCodepage: Integer; safecall;
    procedure Set_InternetCodepage(InternetCodepage: Integer); safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_MeetingWorkspaceURL: WideString; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property AllDayEvent: WordBool read Get_AllDayEvent write Set_AllDayEvent;
    property BusyStatus: OlBusyStatus read Get_BusyStatus write Set_BusyStatus;
    property Duration: Integer read Get_Duration write Set_Duration;
    property End_: TDateTime read Get_End_ write Set_End_;
    property IsOnlineMeeting: WordBool read Get_IsOnlineMeeting write Set_IsOnlineMeeting;
    property IsRecurring: WordBool read Get_IsRecurring;
    property Location: WideString read Get_Location write Set_Location;
    property MeetingStatus: OlMeetingStatus read Get_MeetingStatus write Set_MeetingStatus;
    property NetMeetingAutoStart: WordBool read Get_NetMeetingAutoStart write Set_NetMeetingAutoStart;
    property NetMeetingOrganizerAlias: WideString read Get_NetMeetingOrganizerAlias write Set_NetMeetingOrganizerAlias;
    property NetMeetingServer: WideString read Get_NetMeetingServer write Set_NetMeetingServer;
    property NetMeetingType: OlNetMeetingType read Get_NetMeetingType write Set_NetMeetingType;
    property OptionalAttendees: WideString read Get_OptionalAttendees write Set_OptionalAttendees;
    property Organizer: WideString read Get_Organizer;
    property Recipients: Recipients read Get_Recipients;
    property RecurrenceState: OlRecurrenceState read Get_RecurrenceState;
    property ReminderMinutesBeforeStart: Integer read Get_ReminderMinutesBeforeStart write Set_ReminderMinutesBeforeStart;
    property ReminderOverrideDefault: WordBool read Get_ReminderOverrideDefault write Set_ReminderOverrideDefault;
    property ReminderPlaySound: WordBool read Get_ReminderPlaySound write Set_ReminderPlaySound;
    property ReminderSet: WordBool read Get_ReminderSet write Set_ReminderSet;
    property ReminderSoundFile: WideString read Get_ReminderSoundFile write Set_ReminderSoundFile;
    property ReplyTime: TDateTime read Get_ReplyTime write Set_ReplyTime;
    property RequiredAttendees: WideString read Get_RequiredAttendees write Set_RequiredAttendees;
    property Resources: WideString read Get_Resources write Set_Resources;
    property ResponseRequested: WordBool read Get_ResponseRequested write Set_ResponseRequested;
    property ResponseStatus: OlResponseStatus read Get_ResponseStatus;
    property Start: TDateTime read Get_Start write Set_Start;
    property NetMeetingDocPathName: WideString read Get_NetMeetingDocPathName write Set_NetMeetingDocPathName;
    property NetShowURL: WideString read Get_NetShowURL write Set_NetShowURL;
    property Links: Links read Get_Links;
    property ConferenceServerAllowExternal: WordBool read Get_ConferenceServerAllowExternal write Set_ConferenceServerAllowExternal;
    property ConferenceServerPassword: WideString read Get_ConferenceServerPassword write Set_ConferenceServerPassword;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property InternetCodepage: Integer read Get_InternetCodepage write Set_InternetCodepage;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property MeetingWorkspaceURL: WideString read Get_MeetingWorkspaceURL;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  Attachments = interface(IDispatch)
    ['{0006303C-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Attachment; safecall;
    function Add(Source: OleVariant; Type_: OleVariant; Position: OleVariant;
                 DisplayName: OleVariant): Attachment; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  Attachment = interface(IDispatch)
    ['{00063007-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_DisplayName: WideString; safecall;
    procedure Set_DisplayName(const DisplayName: WideString); safecall;
    function Get_FileName: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_PathName: WideString; safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(Position: Integer); safecall;
    function Get_type_: OlAttachmentType; safecall;
    procedure Delete; safecall;
    procedure SaveAsFile(const Path: WideString); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property DisplayName: WideString read Get_DisplayName write Set_DisplayName;
    property FileName: WideString read Get_FileName;
    property Index: Integer read Get_Index;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property PathName: WideString read Get_PathName;
    property Position: Integer read Get_Position write Set_Position;
    property type_: OlAttachmentType read Get_type_;
  end;
  FormDescription = interface(IDispatch)
    ['{00063046-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Category: WideString; safecall;
    procedure Set_Category(const Category: WideString); safecall;
    function Get_CategorySub: WideString; safecall;
    procedure Set_CategorySub(const CategorySub: WideString); safecall;
    function Get_Comment: WideString; safecall;
    procedure Set_Comment(const Comment: WideString); safecall;
    function Get_ContactName: WideString; safecall;
    procedure Set_ContactName(const ContactName: WideString); safecall;
    function Get_DisplayName: WideString; safecall;
    procedure Set_DisplayName(const DisplayName: WideString); safecall;
    function Get_Hidden: WordBool; safecall;
    procedure Set_Hidden(Hidden: WordBool); safecall;
    function Get_Icon: WideString; safecall;
    procedure Set_Icon(const Icon: WideString); safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(Locked: WordBool); safecall;
    function Get_MessageClass: WideString; safecall;
    function Get_MiniIcon: WideString; safecall;
    procedure Set_MiniIcon(const MiniIcon: WideString); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_Number: WideString; safecall;
    procedure Set_Number(const Number: WideString); safecall;
    function Get_OneOff: WordBool; safecall;
    procedure Set_OneOff(OneOff: WordBool); safecall;
    function Get_Password: WideString; safecall;
    procedure Set_Password(const Password: WideString); safecall;
    function Get_ScriptText: WideString; safecall;
    function Get_Template: WideString; safecall;
    procedure Set_Template(const Template: WideString); safecall;
    function Get_UseWordMail: WordBool; safecall;
    procedure Set_UseWordMail(UseWordMail: WordBool); safecall;
    function Get_Version: WideString; safecall;
    procedure Set_Version(const Version: WideString); safecall;
    procedure PublishForm(Registry: OlFormRegistry; Folder: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Category: WideString read Get_Category write Set_Category;
    property CategorySub: WideString read Get_CategorySub write Set_CategorySub;
    property Comment: WideString read Get_Comment write Set_Comment;
    property ContactName: WideString read Get_ContactName write Set_ContactName;
    property DisplayName: WideString read Get_DisplayName write Set_DisplayName;
    property Hidden: WordBool read Get_Hidden write Set_Hidden;
    property Icon: WideString read Get_Icon write Set_Icon;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property MessageClass: WideString read Get_MessageClass;
    property MiniIcon: WideString read Get_MiniIcon write Set_MiniIcon;
    property Name: WideString read Get_Name write Set_Name;
    property Number: WideString read Get_Number write Set_Number;
    property OneOff: WordBool read Get_OneOff write Set_OneOff;
    property Password: WideString read Get_Password write Set_Password;
    property ScriptText: WideString read Get_ScriptText;
    property Template: WideString read Get_Template write Set_Template;
    property UseWordMail: WordBool read Get_UseWordMail write Set_UseWordMail;
    property Version: WideString read Get_Version write Set_Version;
  end;
  UserProperties = interface(IDispatch)
    ['{0006303D-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): UserProperty; safecall;
    function Add(const Name: WideString; Type_: OlUserPropertyType; AddToFolderFields: OleVariant;
                 DisplayFormat: OleVariant): UserProperty; safecall;
    function Find(const Name: WideString; Custom: OleVariant): UserProperty; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  UserProperty = interface(IDispatch)
    ['{00063042-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const Formula: WideString); safecall;
    function Get_Name: WideString; safecall;
    function Get_type_: OlUserPropertyType; safecall;
    function Get_ValidationFormula: WideString; safecall;
    procedure Set_ValidationFormula(const ValidationFormula: WideString); safecall;
    function Get_ValidationText: WideString; safecall;
    procedure Set_ValidationText(const ValidationText: WideString); safecall;
    function Get_Value: OleVariant; safecall;
    procedure Set_Value(Value: OleVariant); safecall;
    procedure Delete; safecall;
    function Get_IsUserProperty: WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Formula: WideString read Get_Formula write Set_Formula;
    property Name: WideString read Get_Name;
    property type_: OlUserPropertyType read Get_type_;
    property ValidationFormula: WideString read Get_ValidationFormula write Set_ValidationFormula;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property Value: OleVariant read Get_Value write Set_Value;
    property IsUserProperty: WordBool read Get_IsUserProperty;
  end;
  Recipients = interface(IDispatch)
    ['{0006303B-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Recipient; safecall;
    function Add(const Name: WideString): Recipient; safecall;
    procedure Remove(Index: Integer); safecall;
    function ResolveAll: WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _MailItem = interface(IDispatch)
    ['{00063034-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_AlternateRecipientAllowed: WordBool; safecall;
    procedure Set_AlternateRecipientAllowed(AlternateRecipientAllowed: WordBool); safecall;
    function Get_AutoForwarded: WordBool; safecall;
    procedure Set_AutoForwarded(AutoForwarded: WordBool); safecall;
    function Get_BCC: WideString; safecall;
    procedure Set_BCC(const BCC: WideString); safecall;
    function Get_CC: WideString; safecall;
    procedure Set_CC(const CC: WideString); safecall;
    function Get_DeferredDeliveryTime: TDateTime; safecall;
    procedure Set_DeferredDeliveryTime(DeferredDeliveryTime: TDateTime); safecall;
    function Get_DeleteAfterSubmit: WordBool; safecall;
    procedure Set_DeleteAfterSubmit(DeleteAfterSubmit: WordBool); safecall;
    function Get_ExpiryTime: TDateTime; safecall;
    procedure Set_ExpiryTime(ExpiryTime: TDateTime); safecall;
    function Get_FlagDueBy: TDateTime; safecall;
    procedure Set_FlagDueBy(FlagDueBy: TDateTime); safecall;
    function Get_FlagRequest: WideString; safecall;
    procedure Set_FlagRequest(const FlagRequest: WideString); safecall;
    function Get_FlagStatus: OlFlagStatus; safecall;
    procedure Set_FlagStatus(FlagStatus: OlFlagStatus); safecall;
    function Get_HTMLBody: WideString; safecall;
    procedure Set_HTMLBody(const HTMLBody: WideString); safecall;
    function Get_OriginatorDeliveryReportRequested: WordBool; safecall;
    procedure Set_OriginatorDeliveryReportRequested(OriginatorDeliveryReportRequested: WordBool); safecall;
    function Get_ReadReceiptRequested: WordBool; safecall;
    procedure Set_ReadReceiptRequested(ReadReceiptRequested: WordBool); safecall;
    function Get_ReceivedByEntryID: WideString; safecall;
    function Get_ReceivedByName: WideString; safecall;
    function Get_ReceivedOnBehalfOfEntryID: WideString; safecall;
    function Get_ReceivedOnBehalfOfName: WideString; safecall;
    function Get_ReceivedTime: TDateTime; safecall;
    function Get_RecipientReassignmentProhibited: WordBool; safecall;
    procedure Set_RecipientReassignmentProhibited(RecipientReassignmentProhibited: WordBool); safecall;
    function Get_Recipients: Recipients; safecall;
    function Get_ReminderOverrideDefault: WordBool; safecall;
    procedure Set_ReminderOverrideDefault(ReminderOverrideDefault: WordBool); safecall;
    function Get_ReminderPlaySound: WordBool; safecall;
    procedure Set_ReminderPlaySound(ReminderPlaySound: WordBool); safecall;
    function Get_ReminderSet: WordBool; safecall;
    procedure Set_ReminderSet(ReminderSet: WordBool); safecall;
    function Get_ReminderSoundFile: WideString; safecall;
    procedure Set_ReminderSoundFile(const ReminderSoundFile: WideString); safecall;
    function Get_ReminderTime: TDateTime; safecall;
    procedure Set_ReminderTime(ReminderTime: TDateTime); safecall;
    function Get_RemoteStatus: OlRemoteStatus; safecall;
    procedure Set_RemoteStatus(RemoteStatus: OlRemoteStatus); safecall;
    function Get_ReplyRecipientNames: WideString; safecall;
    function Get_ReplyRecipients: Recipients; safecall;
    function Get_SaveSentMessageFolder: MAPIFolder; safecall;
    procedure _Set_SaveSentMessageFolder(const SaveSentMessageFolder: MAPIFolder); safecall;
    function Get_SenderName: WideString; safecall;
    function Get_Sent: WordBool; safecall;
    function Get_SentOn: TDateTime; safecall;
    function Get_SentOnBehalfOfName: WideString; safecall;
    procedure Set_SentOnBehalfOfName(const SentOnBehalfOfName: WideString); safecall;
    function Get_Submitted: WordBool; safecall;
    function Get_To_: WideString; safecall;
    procedure Set_To_(const To_: WideString); safecall;
    function Get_VotingOptions: WideString; safecall;
    procedure Set_VotingOptions(const VotingOptions: WideString); safecall;
    function Get_VotingResponse: WideString; safecall;
    procedure Set_VotingResponse(const VotingResponse: WideString); safecall;
    procedure ClearConversationIndex; safecall;
    function Forward: MailItem; safecall;
    function Reply: MailItem; safecall;
    function ReplyAll: MailItem; safecall;
    procedure Send; safecall;
    function Get_Links: Links; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_BodyFormat: OlBodyFormat; safecall;
    procedure Set_BodyFormat(BodyFormat: OlBodyFormat); safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_InternetCodepage: Integer; safecall;
    procedure Set_InternetCodepage(InternetCodepage: Integer); safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_IsIPFax: WordBool; safecall;
    procedure Set_IsIPFax(IsIPFax: WordBool); safecall;
    function Get_FlagIcon: OlFlagIcon; safecall;
    procedure Set_FlagIcon(FlagIcon: OlFlagIcon); safecall;
    function Get_HasCoverSheet: WordBool; safecall;
    procedure Set_HasCoverSheet(HasCoverSheet: WordBool); safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    function Get_SenderEmailAddress: WideString; safecall;
    function Get_SenderEmailType: WideString; safecall;
    function Get_EnableSharedAttachments: WordBool; safecall;
    procedure Set_EnableSharedAttachments(EnableSharedAttachments: WordBool); safecall;
    function Get_Permission: OlPermission; safecall;
    procedure Set_Permission(Permission: OlPermission); safecall;
    function Get_PermissionService: OlPermissionService; safecall;
    procedure Set_PermissionService(PermissionService: OlPermissionService); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property AlternateRecipientAllowed: WordBool read Get_AlternateRecipientAllowed write Set_AlternateRecipientAllowed;
    property AutoForwarded: WordBool read Get_AutoForwarded write Set_AutoForwarded;
    property BCC: WideString read Get_BCC write Set_BCC;
    property CC: WideString read Get_CC write Set_CC;
    property DeferredDeliveryTime: TDateTime read Get_DeferredDeliveryTime write Set_DeferredDeliveryTime;
    property DeleteAfterSubmit: WordBool read Get_DeleteAfterSubmit write Set_DeleteAfterSubmit;
    property ExpiryTime: TDateTime read Get_ExpiryTime write Set_ExpiryTime;
    property FlagDueBy: TDateTime read Get_FlagDueBy write Set_FlagDueBy;
    property FlagRequest: WideString read Get_FlagRequest write Set_FlagRequest;
    property FlagStatus: OlFlagStatus read Get_FlagStatus write Set_FlagStatus;
    property HTMLBody: WideString read Get_HTMLBody write Set_HTMLBody;
    property OriginatorDeliveryReportRequested: WordBool read Get_OriginatorDeliveryReportRequested write Set_OriginatorDeliveryReportRequested;
    property ReadReceiptRequested: WordBool read Get_ReadReceiptRequested write Set_ReadReceiptRequested;
    property ReceivedByEntryID: WideString read Get_ReceivedByEntryID;
    property ReceivedByName: WideString read Get_ReceivedByName;
    property ReceivedOnBehalfOfEntryID: WideString read Get_ReceivedOnBehalfOfEntryID;
    property ReceivedOnBehalfOfName: WideString read Get_ReceivedOnBehalfOfName;
    property ReceivedTime: TDateTime read Get_ReceivedTime;
    property RecipientReassignmentProhibited: WordBool read Get_RecipientReassignmentProhibited write Set_RecipientReassignmentProhibited;
    property Recipients: Recipients read Get_Recipients;
    property ReminderOverrideDefault: WordBool read Get_ReminderOverrideDefault write Set_ReminderOverrideDefault;
    property ReminderPlaySound: WordBool read Get_ReminderPlaySound write Set_ReminderPlaySound;
    property ReminderSet: WordBool read Get_ReminderSet write Set_ReminderSet;
    property ReminderSoundFile: WideString read Get_ReminderSoundFile write Set_ReminderSoundFile;
    property ReminderTime: TDateTime read Get_ReminderTime write Set_ReminderTime;
    property RemoteStatus: OlRemoteStatus read Get_RemoteStatus write Set_RemoteStatus;
    property ReplyRecipientNames: WideString read Get_ReplyRecipientNames;
    property ReplyRecipients: Recipients read Get_ReplyRecipients;
    property SaveSentMessageFolder: MAPIFolder read Get_SaveSentMessageFolder write _Set_SaveSentMessageFolder;
    property SenderName: WideString read Get_SenderName;
    property Sent: WordBool read Get_Sent;
    property SentOn: TDateTime read Get_SentOn;
    property SentOnBehalfOfName: WideString read Get_SentOnBehalfOfName write Set_SentOnBehalfOfName;
    property Submitted: WordBool read Get_Submitted;
    property To_: WideString read Get_To_ write Set_To_;
    property VotingOptions: WideString read Get_VotingOptions write Set_VotingOptions;
    property VotingResponse: WideString read Get_VotingResponse write Set_VotingResponse;
    property Links: Links read Get_Links;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property BodyFormat: OlBodyFormat read Get_BodyFormat write Set_BodyFormat;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property InternetCodepage: Integer read Get_InternetCodepage write Set_InternetCodepage;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property IsIPFax: WordBool read Get_IsIPFax write Set_IsIPFax;
    property FlagIcon: OlFlagIcon read Get_FlagIcon write Set_FlagIcon;
    property HasCoverSheet: WordBool read Get_HasCoverSheet write Set_HasCoverSheet;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
    property SenderEmailAddress: WideString read Get_SenderEmailAddress;
    property SenderEmailType: WideString read Get_SenderEmailType;
    property EnableSharedAttachments: WordBool read Get_EnableSharedAttachments write Set_EnableSharedAttachments;
    property Permission: OlPermission read Get_Permission write Set_Permission;
    property PermissionService: OlPermissionService read Get_PermissionService write Set_PermissionService;
  end;
  Links = interface(IDispatch)
    ['{0006308A-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Link; safecall;
    function Add(const Item: IDispatch): Link; safecall;
    procedure Remove(Index: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  Link = interface(IDispatch)
    ['{00063089-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_type_: OlObjectClass; safecall;
    function Get_Item: IDispatch; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property type_: OlObjectClass read Get_type_;
    property Item: IDispatch read Get_Item;
  end;
  ItemProperties = interface(IDispatch)
    ['{000630A8-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): ItemProperty; safecall;
    function _NewEnum: IUnknown; safecall;
    function Add(const Name: WideString; Type_: OlUserPropertyType; AddToFolderFields: OleVariant;
                 DisplayFormat: OleVariant): ItemProperty; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  ItemProperty = interface(IDispatch)
    ['{000630A7-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const Formula: WideString); safecall;
    function Get_Name: WideString; safecall;
    function Get_type_: OlUserPropertyType; safecall;
    function Get_ValidationFormula: WideString; safecall;
    procedure Set_ValidationFormula(const ValidationFormula: WideString); safecall;
    function Get_ValidationText: WideString; safecall;
    procedure Set_ValidationText(const ValidationText: WideString); safecall;
    function Get_Value: OleVariant; safecall;
    procedure Set_Value(Value: OleVariant); safecall;
    procedure Delete; safecall;
    function Get_IsUserProperty: WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Formula: WideString read Get_Formula write Set_Formula;
    property Name: WideString read Get_Name;
    property type_: OlUserPropertyType read Get_type_;
    property ValidationFormula: WideString read Get_ValidationFormula write Set_ValidationFormula;
    property ValidationText: WideString read Get_ValidationText write Set_ValidationText;
    property Value: OleVariant read Get_Value write Set_Value;
    property IsUserProperty: WordBool read Get_IsUserProperty;
  end;
  Conflicts = interface(IDispatch)
    ['{000630C2-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Conflict; safecall;
    function GetFirst: Conflict; safecall;
    function GetLast: Conflict; safecall;
    function GetNext: Conflict; safecall;
    function GetPrevious: Conflict; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  Conflict = interface(IDispatch)
    ['{000630C3-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Item: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_type_: OlObjectClass; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Item: IDispatch read Get_Item;
    property Name: WideString read Get_Name;
    property type_: OlObjectClass read Get_type_;
  end;
  RecurrencePattern = interface(IDispatch)
    ['{00063044-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_DayOfMonth: Integer; safecall;
    procedure Set_DayOfMonth(DayOfMonth: Integer); safecall;
    function Get_DayOfWeekMask: OlDaysOfWeek; safecall;
    procedure Set_DayOfWeekMask(DayOfWeekMask: OlDaysOfWeek); safecall;
    function Get_Duration: Integer; safecall;
    procedure Set_Duration(Duration: Integer); safecall;
    function Get_EndTime: TDateTime; safecall;
    procedure Set_EndTime(EndTime: TDateTime); safecall;
    function Get_Exceptions: Exceptions; safecall;
    function Get_Instance: Integer; safecall;
    procedure Set_Instance(Instance: Integer); safecall;
    function Get_Interval: Integer; safecall;
    procedure Set_Interval(Interval: Integer); safecall;
    function Get_MonthOfYear: Integer; safecall;
    procedure Set_MonthOfYear(MonthOfYear: Integer); safecall;
    function Get_NoEndDate: WordBool; safecall;
    procedure Set_NoEndDate(NoEndDate: WordBool); safecall;
    function Get_Occurrences: Integer; safecall;
    procedure Set_Occurrences(Occurrences: Integer); safecall;
    function Get_PatternEndDate: TDateTime; safecall;
    procedure Set_PatternEndDate(PatternEndDate: TDateTime); safecall;
    function Get_PatternStartDate: TDateTime; safecall;
    procedure Set_PatternStartDate(PatternStartDate: TDateTime); safecall;
    function Get_RecurrenceType: OlRecurrenceType; safecall;
    procedure Set_RecurrenceType(RecurrenceType: OlRecurrenceType); safecall;
    function Get_Regenerate: WordBool; safecall;
    procedure Set_Regenerate(Regenerate: WordBool); safecall;
    function Get_StartTime: TDateTime; safecall;
    procedure Set_StartTime(StartTime: TDateTime); safecall;
    function GetOccurrence(StartDate: TDateTime): AppointmentItem; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property DayOfMonth: Integer read Get_DayOfMonth write Set_DayOfMonth;
    property DayOfWeekMask: OlDaysOfWeek read Get_DayOfWeekMask write Set_DayOfWeekMask;
    property Duration: Integer read Get_Duration write Set_Duration;
    property EndTime: TDateTime read Get_EndTime write Set_EndTime;
    property Exceptions: Exceptions read Get_Exceptions;
    property Instance: Integer read Get_Instance write Set_Instance;
    property Interval: Integer read Get_Interval write Set_Interval;
    property MonthOfYear: Integer read Get_MonthOfYear write Set_MonthOfYear;
    property NoEndDate: WordBool read Get_NoEndDate write Set_NoEndDate;
    property Occurrences: Integer read Get_Occurrences write Set_Occurrences;
    property PatternEndDate: TDateTime read Get_PatternEndDate write Set_PatternEndDate;
    property PatternStartDate: TDateTime read Get_PatternStartDate write Set_PatternStartDate;
    property RecurrenceType: OlRecurrenceType read Get_RecurrenceType write Set_RecurrenceType;
    property Regenerate: WordBool read Get_Regenerate write Set_Regenerate;
    property StartTime: TDateTime read Get_StartTime write Set_StartTime;
  end;
  Exceptions = interface(IDispatch)
    ['{0006304C-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): _Exception; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _Exception = interface(IDispatch)
    ['{0006304D-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AppointmentItem: AppointmentItem; safecall;
    function Get_Deleted: WordBool; safecall;
    function Get_OriginalDate: TDateTime; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property AppointmentItem: AppointmentItem read Get_AppointmentItem;
    property Deleted: WordBool read Get_Deleted;
    property OriginalDate: TDateTime read Get_OriginalDate;
    property ItemProperties: ItemProperties read Get_ItemProperties;
  end;
  _MeetingItem = interface(IDispatch)
    ['{00063062-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_AutoForwarded: WordBool; safecall;
    procedure Set_AutoForwarded(AutoForwarded: WordBool); safecall;
    function Get_DeferredDeliveryTime: TDateTime; safecall;
    procedure Set_DeferredDeliveryTime(DeferredDeliveryTime: TDateTime); safecall;
    function Get_DeleteAfterSubmit: WordBool; safecall;
    procedure Set_DeleteAfterSubmit(DeleteAfterSubmit: WordBool); safecall;
    function Get_ExpiryTime: TDateTime; safecall;
    procedure Set_ExpiryTime(ExpiryTime: TDateTime); safecall;
    function Get_FlagDueBy: TDateTime; safecall;
    procedure Set_FlagDueBy(FlagDueBy: TDateTime); safecall;
    function Get_FlagRequest: WideString; safecall;
    procedure Set_FlagRequest(const FlagRequest: WideString); safecall;
    function Get_FlagStatus: OlFlagStatus; safecall;
    procedure Set_FlagStatus(FlagStatus: OlFlagStatus); safecall;
    function Get_OriginatorDeliveryReportRequested: WordBool; safecall;
    procedure Set_OriginatorDeliveryReportRequested(OriginatorDeliveryReportRequested: WordBool); safecall;
    function Get_ReceivedTime: TDateTime; safecall;
    procedure Set_ReceivedTime(ReceivedTime: TDateTime); safecall;
    function Get_Recipients: Recipients; safecall;
    function Get_ReminderSet: WordBool; safecall;
    procedure Set_ReminderSet(ReminderSet: WordBool); safecall;
    function Get_ReminderTime: TDateTime; safecall;
    procedure Set_ReminderTime(ReminderTime: TDateTime); safecall;
    function Get_ReplyRecipients: Recipients; safecall;
    function Get_SaveSentMessageFolder: MAPIFolder; safecall;
    procedure _Set_SaveSentMessageFolder(const SaveSentMessageFolder: MAPIFolder); safecall;
    function Get_SenderName: WideString; safecall;
    function Get_Sent: WordBool; safecall;
    function Get_SentOn: TDateTime; safecall;
    function Get_Submitted: WordBool; safecall;
    function Forward: MeetingItem; safecall;
    function GetAssociatedAppointment(AddToCalendar: WordBool): AppointmentItem; safecall;
    function Reply: MailItem; safecall;
    function ReplyAll: MailItem; safecall;
    procedure Send; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_MeetingWorkspaceURL: WideString; safecall;
    function Get_FlagIcon: OlFlagIcon; safecall;
    procedure Set_FlagIcon(FlagIcon: OlFlagIcon); safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    function Get_SenderEmailAddress: WideString; safecall;
    function Get_SenderEmailType: WideString; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property AutoForwarded: WordBool read Get_AutoForwarded write Set_AutoForwarded;
    property DeferredDeliveryTime: TDateTime read Get_DeferredDeliveryTime write Set_DeferredDeliveryTime;
    property DeleteAfterSubmit: WordBool read Get_DeleteAfterSubmit write Set_DeleteAfterSubmit;
    property ExpiryTime: TDateTime read Get_ExpiryTime write Set_ExpiryTime;
    property FlagDueBy: TDateTime read Get_FlagDueBy write Set_FlagDueBy;
    property FlagRequest: WideString read Get_FlagRequest write Set_FlagRequest;
    property FlagStatus: OlFlagStatus read Get_FlagStatus write Set_FlagStatus;
    property OriginatorDeliveryReportRequested: WordBool read Get_OriginatorDeliveryReportRequested write Set_OriginatorDeliveryReportRequested;
    property ReceivedTime: TDateTime read Get_ReceivedTime write Set_ReceivedTime;
    property Recipients: Recipients read Get_Recipients;
    property ReminderSet: WordBool read Get_ReminderSet write Set_ReminderSet;
    property ReminderTime: TDateTime read Get_ReminderTime write Set_ReminderTime;
    property ReplyRecipients: Recipients read Get_ReplyRecipients;
    property SaveSentMessageFolder: MAPIFolder read Get_SaveSentMessageFolder write _Set_SaveSentMessageFolder;
    property SenderName: WideString read Get_SenderName;
    property Sent: WordBool read Get_Sent;
    property SentOn: TDateTime read Get_SentOn;
    property Submitted: WordBool read Get_Submitted;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property MeetingWorkspaceURL: WideString read Get_MeetingWorkspaceURL;
    property FlagIcon: OlFlagIcon read Get_FlagIcon write Set_FlagIcon;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
    property SenderEmailAddress: WideString read Get_SenderEmailAddress;
    property SenderEmailType: WideString read Get_SenderEmailType;
  end;
  _ContactItem = interface(IDispatch)
    ['{00063021-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_Account: WideString; safecall;
    procedure Set_Account(const Account: WideString); safecall;
    function Get_Anniversary: TDateTime; safecall;
    procedure Set_Anniversary(Anniversary: TDateTime); safecall;
    function Get_AssistantName: WideString; safecall;
    procedure Set_AssistantName(const AssistantName: WideString); safecall;
    function Get_AssistantTelephoneNumber: WideString; safecall;
    procedure Set_AssistantTelephoneNumber(const AssistantTelephoneNumber: WideString); safecall;
    function Get_Birthday: TDateTime; safecall;
    procedure Set_Birthday(Birthday: TDateTime); safecall;
    function Get_Business2TelephoneNumber: WideString; safecall;
    procedure Set_Business2TelephoneNumber(const Business2TelephoneNumber: WideString); safecall;
    function Get_BusinessAddress: WideString; safecall;
    procedure Set_BusinessAddress(const BusinessAddress: WideString); safecall;
    function Get_BusinessAddressCity: WideString; safecall;
    procedure Set_BusinessAddressCity(const BusinessAddressCity: WideString); safecall;
    function Get_BusinessAddressCountry: WideString; safecall;
    procedure Set_BusinessAddressCountry(const BusinessAddressCountry: WideString); safecall;
    function Get_BusinessAddressPostalCode: WideString; safecall;
    procedure Set_BusinessAddressPostalCode(const BusinessAddressPostalCode: WideString); safecall;
    function Get_BusinessAddressPostOfficeBox: WideString; safecall;
    procedure Set_BusinessAddressPostOfficeBox(const BusinessAddressPostOfficeBox: WideString); safecall;
    function Get_BusinessAddressState: WideString; safecall;
    procedure Set_BusinessAddressState(const BusinessAddressState: WideString); safecall;
    function Get_BusinessAddressStreet: WideString; safecall;
    procedure Set_BusinessAddressStreet(const BusinessAddressStreet: WideString); safecall;
    function Get_BusinessFaxNumber: WideString; safecall;
    procedure Set_BusinessFaxNumber(const BusinessFaxNumber: WideString); safecall;
    function Get_BusinessHomePage: WideString; safecall;
    procedure Set_BusinessHomePage(const BusinessHomePage: WideString); safecall;
    function Get_BusinessTelephoneNumber: WideString; safecall;
    procedure Set_BusinessTelephoneNumber(const BusinessTelephoneNumber: WideString); safecall;
    function Get_CallbackTelephoneNumber: WideString; safecall;
    procedure Set_CallbackTelephoneNumber(const CallbackTelephoneNumber: WideString); safecall;
    function Get_CarTelephoneNumber: WideString; safecall;
    procedure Set_CarTelephoneNumber(const CarTelephoneNumber: WideString); safecall;
    function Get_Children: WideString; safecall;
    procedure Set_Children(const Children: WideString); safecall;
    function Get_CompanyAndFullName: WideString; safecall;
    function Get_CompanyLastFirstNoSpace: WideString; safecall;
    function Get_CompanyLastFirstSpaceOnly: WideString; safecall;
    function Get_CompanyMainTelephoneNumber: WideString; safecall;
    procedure Set_CompanyMainTelephoneNumber(const CompanyMainTelephoneNumber: WideString); safecall;
    function Get_CompanyName: WideString; safecall;
    procedure Set_CompanyName(const CompanyName: WideString); safecall;
    function Get_ComputerNetworkName: WideString; safecall;
    procedure Set_ComputerNetworkName(const ComputerNetworkName: WideString); safecall;
    function Get_CustomerID: WideString; safecall;
    procedure Set_CustomerID(const CustomerID: WideString); safecall;
    function Get_Department: WideString; safecall;
    procedure Set_Department(const Department: WideString); safecall;
    function Get_Email1Address: WideString; safecall;
    procedure Set_Email1Address(const Email1Address: WideString); safecall;
    function Get_Email1AddressType: WideString; safecall;
    procedure Set_Email1AddressType(const Email1AddressType: WideString); safecall;
    function Get_Email1DisplayName: WideString; safecall;
    function Get_Email1EntryID: WideString; safecall;
    function Get_Email2Address: WideString; safecall;
    procedure Set_Email2Address(const Email2Address: WideString); safecall;
    function Get_Email2AddressType: WideString; safecall;
    procedure Set_Email2AddressType(const Email2AddressType: WideString); safecall;
    function Get_Email2DisplayName: WideString; safecall;
    function Get_Email2EntryID: WideString; safecall;
    function Get_Email3Address: WideString; safecall;
    procedure Set_Email3Address(const Email3Address: WideString); safecall;
    function Get_Email3AddressType: WideString; safecall;
    procedure Set_Email3AddressType(const Email3AddressType: WideString); safecall;
    function Get_Email3DisplayName: WideString; safecall;
    function Get_Email3EntryID: WideString; safecall;
    function Get_FileAs: WideString; safecall;
    procedure Set_FileAs(const FileAs: WideString); safecall;
    function Get_FirstName: WideString; safecall;
    procedure Set_FirstName(const FirstName: WideString); safecall;
    function Get_FTPSite: WideString; safecall;
    procedure Set_FTPSite(const FTPSite: WideString); safecall;
    function Get_FullName: WideString; safecall;
    procedure Set_FullName(const FullName: WideString); safecall;
    function Get_FullNameAndCompany: WideString; safecall;
    function Get_Gender: OlGender; safecall;
    procedure Set_Gender(Gender: OlGender); safecall;
    function Get_GovernmentIDNumber: WideString; safecall;
    procedure Set_GovernmentIDNumber(const GovernmentIDNumber: WideString); safecall;
    function Get_Hobby: WideString; safecall;
    procedure Set_Hobby(const Hobby: WideString); safecall;
    function Get_Home2TelephoneNumber: WideString; safecall;
    procedure Set_Home2TelephoneNumber(const Home2TelephoneNumber: WideString); safecall;
    function Get_HomeAddress: WideString; safecall;
    procedure Set_HomeAddress(const HomeAddress: WideString); safecall;
    function Get_HomeAddressCity: WideString; safecall;
    procedure Set_HomeAddressCity(const HomeAddressCity: WideString); safecall;
    function Get_HomeAddressCountry: WideString; safecall;
    procedure Set_HomeAddressCountry(const HomeAddressCountry: WideString); safecall;
    function Get_HomeAddressPostalCode: WideString; safecall;
    procedure Set_HomeAddressPostalCode(const HomeAddressPostalCode: WideString); safecall;
    function Get_HomeAddressPostOfficeBox: WideString; safecall;
    procedure Set_HomeAddressPostOfficeBox(const HomeAddressPostOfficeBox: WideString); safecall;
    function Get_HomeAddressState: WideString; safecall;
    procedure Set_HomeAddressState(const HomeAddressState: WideString); safecall;
    function Get_HomeAddressStreet: WideString; safecall;
    procedure Set_HomeAddressStreet(const HomeAddressStreet: WideString); safecall;
    function Get_HomeFaxNumber: WideString; safecall;
    procedure Set_HomeFaxNumber(const HomeFaxNumber: WideString); safecall;
    function Get_HomeTelephoneNumber: WideString; safecall;
    procedure Set_HomeTelephoneNumber(const HomeTelephoneNumber: WideString); safecall;
    function Get_Initials: WideString; safecall;
    procedure Set_Initials(const Initials: WideString); safecall;
    function Get_InternetFreeBusyAddress: WideString; safecall;
    procedure Set_InternetFreeBusyAddress(const InternetFreeBusyAddress: WideString); safecall;
    function Get_ISDNNumber: WideString; safecall;
    procedure Set_ISDNNumber(const ISDNNumber: WideString); safecall;
    function Get_JobTitle: WideString; safecall;
    procedure Set_JobTitle(const JobTitle: WideString); safecall;
    function Get_Journal: WordBool; safecall;
    procedure Set_Journal(Journal: WordBool); safecall;
    function Get_Language: WideString; safecall;
    procedure Set_Language(const Language: WideString); safecall;
    function Get_LastFirstAndSuffix: WideString; safecall;
    function Get_LastFirstNoSpace: WideString; safecall;
    function Get_LastFirstNoSpaceCompany: WideString; safecall;
    function Get_LastFirstSpaceOnly: WideString; safecall;
    function Get_LastFirstSpaceOnlyCompany: WideString; safecall;
    function Get_LastName: WideString; safecall;
    procedure Set_LastName(const LastName: WideString); safecall;
    function Get_LastNameAndFirstName: WideString; safecall;
    function Get_MailingAddress: WideString; safecall;
    procedure Set_MailingAddress(const MailingAddress: WideString); safecall;
    function Get_MailingAddressCity: WideString; safecall;
    procedure Set_MailingAddressCity(const MailingAddressCity: WideString); safecall;
    function Get_MailingAddressCountry: WideString; safecall;
    procedure Set_MailingAddressCountry(const MailingAddressCountry: WideString); safecall;
    function Get_MailingAddressPostalCode: WideString; safecall;
    procedure Set_MailingAddressPostalCode(const MailingAddressPostalCode: WideString); safecall;
    function Get_MailingAddressPostOfficeBox: WideString; safecall;
    procedure Set_MailingAddressPostOfficeBox(const MailingAddressPostOfficeBox: WideString); safecall;
    function Get_MailingAddressState: WideString; safecall;
    procedure Set_MailingAddressState(const MailingAddressState: WideString); safecall;
    function Get_MailingAddressStreet: WideString; safecall;
    procedure Set_MailingAddressStreet(const MailingAddressStreet: WideString); safecall;
    function Get_ManagerName: WideString; safecall;
    procedure Set_ManagerName(const ManagerName: WideString); safecall;
    function Get_MiddleName: WideString; safecall;
    procedure Set_MiddleName(const MiddleName: WideString); safecall;
    function Get_MobileTelephoneNumber: WideString; safecall;
    procedure Set_MobileTelephoneNumber(const MobileTelephoneNumber: WideString); safecall;
    function Get_NetMeetingAlias: WideString; safecall;
    procedure Set_NetMeetingAlias(const NetMeetingAlias: WideString); safecall;
    function Get_NetMeetingServer: WideString; safecall;
    procedure Set_NetMeetingServer(const NetMeetingServer: WideString); safecall;
    function Get_NickName: WideString; safecall;
    procedure Set_NickName(const NickName: WideString); safecall;
    function Get_OfficeLocation: WideString; safecall;
    procedure Set_OfficeLocation(const OfficeLocation: WideString); safecall;
    function Get_OrganizationalIDNumber: WideString; safecall;
    procedure Set_OrganizationalIDNumber(const OrganizationalIDNumber: WideString); safecall;
    function Get_OtherAddress: WideString; safecall;
    procedure Set_OtherAddress(const OtherAddress: WideString); safecall;
    function Get_OtherAddressCity: WideString; safecall;
    procedure Set_OtherAddressCity(const OtherAddressCity: WideString); safecall;
    function Get_OtherAddressCountry: WideString; safecall;
    procedure Set_OtherAddressCountry(const OtherAddressCountry: WideString); safecall;
    function Get_OtherAddressPostalCode: WideString; safecall;
    procedure Set_OtherAddressPostalCode(const OtherAddressPostalCode: WideString); safecall;
    function Get_OtherAddressPostOfficeBox: WideString; safecall;
    procedure Set_OtherAddressPostOfficeBox(const OtherAddressPostOfficeBox: WideString); safecall;
    function Get_OtherAddressState: WideString; safecall;
    procedure Set_OtherAddressState(const OtherAddressState: WideString); safecall;
    function Get_OtherAddressStreet: WideString; safecall;
    procedure Set_OtherAddressStreet(const OtherAddressStreet: WideString); safecall;
    function Get_OtherFaxNumber: WideString; safecall;
    procedure Set_OtherFaxNumber(const OtherFaxNumber: WideString); safecall;
    function Get_OtherTelephoneNumber: WideString; safecall;
    procedure Set_OtherTelephoneNumber(const OtherTelephoneNumber: WideString); safecall;
    function Get_PagerNumber: WideString; safecall;
    procedure Set_PagerNumber(const PagerNumber: WideString); safecall;
    function Get_PersonalHomePage: WideString; safecall;
    procedure Set_PersonalHomePage(const PersonalHomePage: WideString); safecall;
    function Get_PrimaryTelephoneNumber: WideString; safecall;
    procedure Set_PrimaryTelephoneNumber(const PrimaryTelephoneNumber: WideString); safecall;
    function Get_Profession: WideString; safecall;
    procedure Set_Profession(const Profession: WideString); safecall;
    function Get_RadioTelephoneNumber: WideString; safecall;
    procedure Set_RadioTelephoneNumber(const RadioTelephoneNumber: WideString); safecall;
    function Get_ReferredBy: WideString; safecall;
    procedure Set_ReferredBy(const ReferredBy: WideString); safecall;
    function Get_SelectedMailingAddress: OlMailingAddress; safecall;
    procedure Set_SelectedMailingAddress(SelectedMailingAddress: OlMailingAddress); safecall;
    function Get_Spouse: WideString; safecall;
    procedure Set_Spouse(const Spouse: WideString); safecall;
    function Get_Suffix: WideString; safecall;
    procedure Set_Suffix(const Suffix: WideString); safecall;
    function Get_TelexNumber: WideString; safecall;
    procedure Set_TelexNumber(const TelexNumber: WideString); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const Title: WideString); safecall;
    function Get_TTYTDDTelephoneNumber: WideString; safecall;
    procedure Set_TTYTDDTelephoneNumber(const TTYTDDTelephoneNumber: WideString); safecall;
    function Get_User1: WideString; safecall;
    procedure Set_User1(const User1: WideString); safecall;
    function Get_User2: WideString; safecall;
    procedure Set_User2(const User2: WideString); safecall;
    function Get_User3: WideString; safecall;
    procedure Set_User3(const User3: WideString); safecall;
    function Get_User4: WideString; safecall;
    procedure Set_User4(const User4: WideString); safecall;
    function Get_UserCertificate: WideString; safecall;
    procedure Set_UserCertificate(const UserCertificate: WideString); safecall;
    function Get_WebPage: WideString; safecall;
    procedure Set_WebPage(const WebPage: WideString); safecall;
    function Get_YomiCompanyName: WideString; safecall;
    procedure Set_YomiCompanyName(const YomiCompanyName: WideString); safecall;
    function Get_YomiFirstName: WideString; safecall;
    procedure Set_YomiFirstName(const YomiFirstName: WideString); safecall;
    function Get_YomiLastName: WideString; safecall;
    procedure Set_YomiLastName(const YomiLastName: WideString); safecall;
    function ForwardAsVcard: MailItem; safecall;
    function Get_Links: Links; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_LastFirstNoSpaceAndSuffix: WideString; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_IMAddress: WideString; safecall;
    procedure Set_IMAddress(const IMAddress: WideString); safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    procedure Set_Email1DisplayName(const Email1DisplayName: WideString); safecall;
    procedure Set_Email2DisplayName(const Email2DisplayName: WideString); safecall;
    procedure Set_Email3DisplayName(const Email3DisplayName: WideString); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    procedure AddPicture(const Path: WideString); safecall;
    procedure RemovePicture; safecall;
    function Get_HasPicture: WordBool; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Account: WideString read Get_Account write Set_Account;
    property Anniversary: TDateTime read Get_Anniversary write Set_Anniversary;
    property AssistantName: WideString read Get_AssistantName write Set_AssistantName;
    property AssistantTelephoneNumber: WideString read Get_AssistantTelephoneNumber write Set_AssistantTelephoneNumber;
    property Birthday: TDateTime read Get_Birthday write Set_Birthday;
    property Business2TelephoneNumber: WideString read Get_Business2TelephoneNumber write Set_Business2TelephoneNumber;
    property BusinessAddress: WideString read Get_BusinessAddress write Set_BusinessAddress;
    property BusinessAddressCity: WideString read Get_BusinessAddressCity write Set_BusinessAddressCity;
    property BusinessAddressCountry: WideString read Get_BusinessAddressCountry write Set_BusinessAddressCountry;
    property BusinessAddressPostalCode: WideString read Get_BusinessAddressPostalCode write Set_BusinessAddressPostalCode;
    property BusinessAddressPostOfficeBox: WideString read Get_BusinessAddressPostOfficeBox write Set_BusinessAddressPostOfficeBox;
    property BusinessAddressState: WideString read Get_BusinessAddressState write Set_BusinessAddressState;
    property BusinessAddressStreet: WideString read Get_BusinessAddressStreet write Set_BusinessAddressStreet;
    property BusinessFaxNumber: WideString read Get_BusinessFaxNumber write Set_BusinessFaxNumber;
    property BusinessHomePage: WideString read Get_BusinessHomePage write Set_BusinessHomePage;
    property BusinessTelephoneNumber: WideString read Get_BusinessTelephoneNumber write Set_BusinessTelephoneNumber;
    property CallbackTelephoneNumber: WideString read Get_CallbackTelephoneNumber write Set_CallbackTelephoneNumber;
    property CarTelephoneNumber: WideString read Get_CarTelephoneNumber write Set_CarTelephoneNumber;
    property Children: WideString read Get_Children write Set_Children;
    property CompanyAndFullName: WideString read Get_CompanyAndFullName;
    property CompanyLastFirstNoSpace: WideString read Get_CompanyLastFirstNoSpace;
    property CompanyLastFirstSpaceOnly: WideString read Get_CompanyLastFirstSpaceOnly;
    property CompanyMainTelephoneNumber: WideString read Get_CompanyMainTelephoneNumber write Set_CompanyMainTelephoneNumber;
    property CompanyName: WideString read Get_CompanyName write Set_CompanyName;
    property ComputerNetworkName: WideString read Get_ComputerNetworkName write Set_ComputerNetworkName;
    property CustomerID: WideString read Get_CustomerID write Set_CustomerID;
    property Department: WideString read Get_Department write Set_Department;
    property Email1Address: WideString read Get_Email1Address write Set_Email1Address;
    property Email1AddressType: WideString read Get_Email1AddressType write Set_Email1AddressType;
    property Email1DisplayName: WideString read Get_Email1DisplayName write Set_Email1DisplayName;
    property Email1EntryID: WideString read Get_Email1EntryID;
    property Email2Address: WideString read Get_Email2Address write Set_Email2Address;
    property Email2AddressType: WideString read Get_Email2AddressType write Set_Email2AddressType;
    property Email2DisplayName: WideString read Get_Email2DisplayName write Set_Email2DisplayName;
    property Email2EntryID: WideString read Get_Email2EntryID;
    property Email3Address: WideString read Get_Email3Address write Set_Email3Address;
    property Email3AddressType: WideString read Get_Email3AddressType write Set_Email3AddressType;
    property Email3DisplayName: WideString read Get_Email3DisplayName write Set_Email3DisplayName;
    property Email3EntryID: WideString read Get_Email3EntryID;
    property FileAs: WideString read Get_FileAs write Set_FileAs;
    property FirstName: WideString read Get_FirstName write Set_FirstName;
    property FTPSite: WideString read Get_FTPSite write Set_FTPSite;
    property FullName: WideString read Get_FullName write Set_FullName;
    property FullNameAndCompany: WideString read Get_FullNameAndCompany;
    property Gender: OlGender read Get_Gender write Set_Gender;
    property GovernmentIDNumber: WideString read Get_GovernmentIDNumber write Set_GovernmentIDNumber;
    property Hobby: WideString read Get_Hobby write Set_Hobby;
    property Home2TelephoneNumber: WideString read Get_Home2TelephoneNumber write Set_Home2TelephoneNumber;
    property HomeAddress: WideString read Get_HomeAddress write Set_HomeAddress;
    property HomeAddressCity: WideString read Get_HomeAddressCity write Set_HomeAddressCity;
    property HomeAddressCountry: WideString read Get_HomeAddressCountry write Set_HomeAddressCountry;
    property HomeAddressPostalCode: WideString read Get_HomeAddressPostalCode write Set_HomeAddressPostalCode;
    property HomeAddressPostOfficeBox: WideString read Get_HomeAddressPostOfficeBox write Set_HomeAddressPostOfficeBox;
    property HomeAddressState: WideString read Get_HomeAddressState write Set_HomeAddressState;
    property HomeAddressStreet: WideString read Get_HomeAddressStreet write Set_HomeAddressStreet;
    property HomeFaxNumber: WideString read Get_HomeFaxNumber write Set_HomeFaxNumber;
    property HomeTelephoneNumber: WideString read Get_HomeTelephoneNumber write Set_HomeTelephoneNumber;
    property Initials: WideString read Get_Initials write Set_Initials;
    property InternetFreeBusyAddress: WideString read Get_InternetFreeBusyAddress write Set_InternetFreeBusyAddress;
    property ISDNNumber: WideString read Get_ISDNNumber write Set_ISDNNumber;
    property JobTitle: WideString read Get_JobTitle write Set_JobTitle;
    property Journal: WordBool read Get_Journal write Set_Journal;
    property Language: WideString read Get_Language write Set_Language;
    property LastFirstAndSuffix: WideString read Get_LastFirstAndSuffix;
    property LastFirstNoSpace: WideString read Get_LastFirstNoSpace;
    property LastFirstNoSpaceCompany: WideString read Get_LastFirstNoSpaceCompany;
    property LastFirstSpaceOnly: WideString read Get_LastFirstSpaceOnly;
    property LastFirstSpaceOnlyCompany: WideString read Get_LastFirstSpaceOnlyCompany;
    property LastName: WideString read Get_LastName write Set_LastName;
    property LastNameAndFirstName: WideString read Get_LastNameAndFirstName;
    property MailingAddress: WideString read Get_MailingAddress write Set_MailingAddress;
    property MailingAddressCity: WideString read Get_MailingAddressCity write Set_MailingAddressCity;
    property MailingAddressCountry: WideString read Get_MailingAddressCountry write Set_MailingAddressCountry;
    property MailingAddressPostalCode: WideString read Get_MailingAddressPostalCode write Set_MailingAddressPostalCode;
    property MailingAddressPostOfficeBox: WideString read Get_MailingAddressPostOfficeBox write Set_MailingAddressPostOfficeBox;
    property MailingAddressState: WideString read Get_MailingAddressState write Set_MailingAddressState;
    property MailingAddressStreet: WideString read Get_MailingAddressStreet write Set_MailingAddressStreet;
    property ManagerName: WideString read Get_ManagerName write Set_ManagerName;
    property MiddleName: WideString read Get_MiddleName write Set_MiddleName;
    property MobileTelephoneNumber: WideString read Get_MobileTelephoneNumber write Set_MobileTelephoneNumber;
    property NetMeetingAlias: WideString read Get_NetMeetingAlias write Set_NetMeetingAlias;
    property NetMeetingServer: WideString read Get_NetMeetingServer write Set_NetMeetingServer;
    property NickName: WideString read Get_NickName write Set_NickName;
    property OfficeLocation: WideString read Get_OfficeLocation write Set_OfficeLocation;
    property OrganizationalIDNumber: WideString read Get_OrganizationalIDNumber write Set_OrganizationalIDNumber;
    property OtherAddress: WideString read Get_OtherAddress write Set_OtherAddress;
    property OtherAddressCity: WideString read Get_OtherAddressCity write Set_OtherAddressCity;
    property OtherAddressCountry: WideString read Get_OtherAddressCountry write Set_OtherAddressCountry;
    property OtherAddressPostalCode: WideString read Get_OtherAddressPostalCode write Set_OtherAddressPostalCode;
    property OtherAddressPostOfficeBox: WideString read Get_OtherAddressPostOfficeBox write Set_OtherAddressPostOfficeBox;
    property OtherAddressState: WideString read Get_OtherAddressState write Set_OtherAddressState;
    property OtherAddressStreet: WideString read Get_OtherAddressStreet write Set_OtherAddressStreet;
    property OtherFaxNumber: WideString read Get_OtherFaxNumber write Set_OtherFaxNumber;
    property OtherTelephoneNumber: WideString read Get_OtherTelephoneNumber write Set_OtherTelephoneNumber;
    property PagerNumber: WideString read Get_PagerNumber write Set_PagerNumber;
    property PersonalHomePage: WideString read Get_PersonalHomePage write Set_PersonalHomePage;
    property PrimaryTelephoneNumber: WideString read Get_PrimaryTelephoneNumber write Set_PrimaryTelephoneNumber;
    property Profession: WideString read Get_Profession write Set_Profession;
    property RadioTelephoneNumber: WideString read Get_RadioTelephoneNumber write Set_RadioTelephoneNumber;
    property ReferredBy: WideString read Get_ReferredBy write Set_ReferredBy;
    property SelectedMailingAddress: OlMailingAddress read Get_SelectedMailingAddress write Set_SelectedMailingAddress;
    property Spouse: WideString read Get_Spouse write Set_Spouse;
    property Suffix: WideString read Get_Suffix write Set_Suffix;
    property TelexNumber: WideString read Get_TelexNumber write Set_TelexNumber;
    property Title: WideString read Get_Title write Set_Title;
    property TTYTDDTelephoneNumber: WideString read Get_TTYTDDTelephoneNumber write Set_TTYTDDTelephoneNumber;
    property User1: WideString read Get_User1 write Set_User1;
    property User2: WideString read Get_User2 write Set_User2;
    property User3: WideString read Get_User3 write Set_User3;
    property User4: WideString read Get_User4 write Set_User4;
    property UserCertificate: WideString read Get_UserCertificate write Set_UserCertificate;
    property WebPage: WideString read Get_WebPage write Set_WebPage;
    property YomiCompanyName: WideString read Get_YomiCompanyName write Set_YomiCompanyName;
    property YomiFirstName: WideString read Get_YomiFirstName write Set_YomiFirstName;
    property YomiLastName: WideString read Get_YomiLastName write Set_YomiLastName;
    property Links: Links read Get_Links;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property LastFirstNoSpaceAndSuffix: WideString read Get_LastFirstNoSpaceAndSuffix;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property IMAddress: WideString read Get_IMAddress write Set_IMAddress;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
    property HasPicture: WordBool read Get_HasPicture;
  end;
  _DistListItem = interface(IDispatch)
    ['{00063081-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_DLName: WideString; safecall;
    procedure Set_DLName(const DLName: WideString); safecall;
    function Get_MemberCount: Integer; safecall;
    function Get_CheckSum: Integer; safecall;
    function Get_Members: OleVariant; safecall;
    procedure Set_Members(Members: OleVariant); safecall;
    function Get_OneOffMembers: OleVariant; safecall;
    procedure Set_OneOffMembers(OneOffMembers: OleVariant); safecall;
    function Get_Links: Links; safecall;
    procedure AddMembers(const Recipients: Recipients); safecall;
    procedure RemoveMembers(const Recipients: Recipients); safecall;
    function GetMember(Index: Integer): Recipient; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    procedure AddMember(const Recipient: Recipient); safecall;
    procedure RemoveMember(const Recipient: Recipient); safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property DLName: WideString read Get_DLName write Set_DLName;
    property MemberCount: Integer read Get_MemberCount;
    property CheckSum: Integer read Get_CheckSum;
    property Members: OleVariant read Get_Members write Set_Members;
    property OneOffMembers: OleVariant read Get_OneOffMembers write Set_OneOffMembers;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _DocumentItem = interface(IDispatch)
    ['{00063020-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  (*ItemsEvents = dispinterface
    ['{00063077-0000-0000-C000-000000000046}']
    procedure ItemAdd(const Item: IDispatch); dispid 61441;
    procedure ItemChange(const Item: IDispatch); dispid 61442;
    procedure ItemRemove; dispid 61443;
  end;*)
  _JournalItem = interface(IDispatch)
    ['{00063022-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_ContactNames: WideString; safecall;
    procedure Set_ContactNames(const ContactNames: WideString); safecall;
    function Get_DocPosted: WordBool; safecall;
    procedure Set_DocPosted(DocPosted: WordBool); safecall;
    function Get_DocPrinted: WordBool; safecall;
    procedure Set_DocPrinted(DocPrinted: WordBool); safecall;
    function Get_DocRouted: WordBool; safecall;
    procedure Set_DocRouted(DocRouted: WordBool); safecall;
    function Get_DocSaved: WordBool; safecall;
    procedure Set_DocSaved(DocSaved: WordBool); safecall;
    function Get_Duration: Integer; safecall;
    procedure Set_Duration(Duration: Integer); safecall;
    function Get_End_: TDateTime; safecall;
    procedure Set_End_(End_: TDateTime); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_type_(const Type_: WideString); safecall;
    function Get_Recipients: Recipients; safecall;
    function Get_Start: TDateTime; safecall;
    procedure Set_Start(Start: TDateTime); safecall;
    function Forward: MailItem; safecall;
    function Reply: MailItem; safecall;
    function ReplyAll: MailItem; safecall;
    procedure StartTimer; safecall;
    procedure StopTimer; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property ContactNames: WideString read Get_ContactNames write Set_ContactNames;
    property DocPosted: WordBool read Get_DocPosted write Set_DocPosted;
    property DocPrinted: WordBool read Get_DocPrinted write Set_DocPrinted;
    property DocRouted: WordBool read Get_DocRouted write Set_DocRouted;
    property DocSaved: WordBool read Get_DocSaved write Set_DocSaved;
    property Duration: Integer read Get_Duration write Set_Duration;
    property End_: TDateTime read Get_End_ write Set_End_;
    property type_: WideString read Get_type_ write Set_type_;
    property Recipients: Recipients read Get_Recipients;
    property Start: TDateTime read Get_Start write Set_Start;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _NoteItem = interface(IDispatch)
    ['{00063025-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Color: OlNoteColor; safecall;
    procedure Set_Color(Color: OlNoteColor); safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(Height: Integer); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(Left: Integer); safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(Top: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(Width: Integer); safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Color: OlNoteColor read Get_Color write Set_Color;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property GetInspector: _Inspector read Get_GetInspector;
    property Height: Integer read Get_Height write Set_Height;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property Left: Integer read Get_Left write Set_Left;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Saved: WordBool read Get_Saved;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  OutlookBarGroup = interface(IDispatch)
    ['{00063073-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_Shortcuts: _OutlookBarShortcuts; safecall;
    function Get_ViewType: OlOutlookBarViewType; safecall;
    procedure Set_ViewType(ViewType: OlOutlookBarViewType); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name write Set_Name;
    property Shortcuts: _OutlookBarShortcuts read Get_Shortcuts;
    property ViewType: OlOutlookBarViewType read Get_ViewType write Set_ViewType;
  end;
  _OutlookBarShortcuts = interface(IDispatch)
    ['{00063074-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): OutlookBarShortcut; safecall;
    function Add(Target: OleVariant; const Name: WideString; Index: OleVariant): OutlookBarShortcut; safecall;
    procedure Remove(Index: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  OutlookBarShortcut = interface(IDispatch)
    ['{00063075-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Name: WideString); safecall;
    function Get_Target: OleVariant; safecall;
    procedure SetIcon(Icon: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name write Set_Name;
    property Target: OleVariant read Get_Target;
  end;
  _OutlookBarGroups = interface(IDispatch)
    ['{00063072-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): OutlookBarGroup; safecall;
    function Add(const Name: WideString; Index: OleVariant): OutlookBarGroup; safecall;
    procedure Remove(Index: OleVariant); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _OutlookBarPane = interface(IDispatch)
    ['{00063070-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Contents: OutlookBarStorage; safecall;
    function Get_CurrentGroup: OutlookBarGroup; safecall;
    procedure _Set_CurrentGroup(const CurrentGroup: OutlookBarGroup); safecall;
    function Get_Name: WideString; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(Visible: WordBool); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Contents: OutlookBarStorage read Get_Contents;
    property CurrentGroup: OutlookBarGroup read Get_CurrentGroup write _Set_CurrentGroup;
    property Name: WideString read Get_Name;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;
  OutlookBarStorage = interface(IDispatch)
    ['{00063071-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Groups: _OutlookBarGroups; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Groups: _OutlookBarGroups read Get_Groups;
  end;
  PropertyPage = interface(IDispatch)
    ['{0006307E-0000-0000-C000-000000000046}']
    function GetPageInfo(var HelpFile: WideString; var HelpContext: Integer): HResult; stdcall;
    function Get_Dirty(out Dirty: WordBool): HResult; stdcall;
    function Apply: HResult; stdcall;
  end;
  PropertyPageSite = interface(IDispatch)
    ['{0006307F-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure OnStatusChange; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
  end;
  Pages = interface(IDispatch)
    ['{0006303F-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): IDispatch; safecall;
    function Add(Name: OleVariant): IDispatch; safecall;
    procedure Remove(Index: Integer); safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;
  _PostItem = interface(IDispatch)
    ['{00063024-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_ExpiryTime: TDateTime; safecall;
    procedure Set_ExpiryTime(ExpiryTime: TDateTime); safecall;
    function Get_HTMLBody: WideString; safecall;
    procedure Set_HTMLBody(const HTMLBody: WideString); safecall;
    function Get_ReceivedTime: TDateTime; safecall;
    function Get_SenderName: WideString; safecall;
    function Get_SentOn: TDateTime; safecall;
    procedure ClearConversationIndex; safecall;
    function Forward: MailItem; safecall;
    procedure Post; safecall;
    function Reply: MailItem; safecall;
    function Get_Links: Links; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_BodyFormat: OlBodyFormat; safecall;
    procedure Set_BodyFormat(BodyFormat: OlBodyFormat); safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_InternetCodepage: Integer; safecall;
    procedure Set_InternetCodepage(InternetCodepage: Integer); safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function SetACLs: WordBool; safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    function Get_SenderEmailAddress: WideString; safecall;
    function Get_SenderEmailType: WideString; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property ExpiryTime: TDateTime read Get_ExpiryTime write Set_ExpiryTime;
    property HTMLBody: WideString read Get_HTMLBody write Set_HTMLBody;
    property ReceivedTime: TDateTime read Get_ReceivedTime;
    property SenderName: WideString read Get_SenderName;
    property SentOn: TDateTime read Get_SentOn;
    property Links: Links read Get_Links;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property BodyFormat: OlBodyFormat read Get_BodyFormat write Set_BodyFormat;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property InternetCodepage: Integer read Get_InternetCodepage write Set_InternetCodepage;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
    property SenderEmailAddress: WideString read Get_SenderEmailAddress;
    property SenderEmailType: WideString read Get_SenderEmailType;
  end;
  _RemoteItem = interface(IDispatch)
    ['{00063023-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_HasAttachment: WordBool; safecall;
    function Get_RemoteMessageClass: WideString; safecall;
    function Get_TransferSize: Integer; safecall;
    function Get_TransferTime: Integer; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property HasAttachment: WordBool read Get_HasAttachment;
    property RemoteMessageClass: WideString read Get_RemoteMessageClass;
    property TransferSize: Integer read Get_TransferSize;
    property TransferTime: Integer read Get_TransferTime;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _ReportItem = interface(IDispatch)
    ['{00063026-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _TaskItem = interface(IDispatch)
    ['{00063035-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function Get_ActualWork: Integer; safecall;
    procedure Set_ActualWork(ActualWork: Integer); safecall;
    function Get_CardData: WideString; safecall;
    procedure Set_CardData(const CardData: WideString); safecall;
    function Get_Complete: WordBool; safecall;
    procedure Set_Complete(Complete: WordBool); safecall;
    function Get_Contacts: WideString; safecall;
    procedure Set_Contacts(const Contacts: WideString); safecall;
    function Get_ContactNames: WideString; safecall;
    procedure Set_ContactNames(const ContactNames: WideString); safecall;
    function Get_DateCompleted: TDateTime; safecall;
    procedure Set_DateCompleted(DateCompleted: TDateTime); safecall;
    function Get_DelegationState: OlTaskDelegationState; safecall;
    function Get_Delegator: WideString; safecall;
    function Get_DueDate: TDateTime; safecall;
    procedure Set_DueDate(DueDate: TDateTime); safecall;
    function Get_IsRecurring: WordBool; safecall;
    function Get_Ordinal: Integer; safecall;
    procedure Set_Ordinal(Ordinal: Integer); safecall;
    function Get_Owner: WideString; safecall;
    procedure Set_Owner(const Owner: WideString); safecall;
    function Get_Ownership: OlTaskOwnership; safecall;
    function Get_PercentComplete: Integer; safecall;
    procedure Set_PercentComplete(PercentComplete: Integer); safecall;
    function Get_Recipients: Recipients; safecall;
    function Get_ReminderTime: TDateTime; safecall;
    procedure Set_ReminderTime(ReminderTime: TDateTime); safecall;
    function Get_ReminderOverrideDefault: WordBool; safecall;
    procedure Set_ReminderOverrideDefault(ReminderOverrideDefault: WordBool); safecall;
    function Get_ReminderPlaySound: WordBool; safecall;
    procedure Set_ReminderPlaySound(ReminderPlaySound: WordBool); safecall;
    function Get_ReminderSet: WordBool; safecall;
    procedure Set_ReminderSet(ReminderSet: WordBool); safecall;
    function Get_ReminderSoundFile: WideString; safecall;
    procedure Set_ReminderSoundFile(const ReminderSoundFile: WideString); safecall;
    function Get_ResponseState: OlTaskResponse; safecall;
    function Get_Role: WideString; safecall;
    procedure Set_Role(const Role: WideString); safecall;
    function Get_SchedulePlusPriority: WideString; safecall;
    procedure Set_SchedulePlusPriority(const SchedulePlusPriority: WideString); safecall;
    function Get_StartDate: TDateTime; safecall;
    procedure Set_StartDate(StartDate: TDateTime); safecall;
    function Get_Status: OlTaskStatus; safecall;
    procedure Set_Status(Status: OlTaskStatus); safecall;
    function Get_StatusOnCompletionRecipients: WideString; safecall;
    procedure Set_StatusOnCompletionRecipients(const StatusOnCompletionRecipients: WideString); safecall;
    function Get_StatusUpdateRecipients: WideString; safecall;
    procedure Set_StatusUpdateRecipients(const StatusUpdateRecipients: WideString); safecall;
    function Get_TeamTask: WordBool; safecall;
    procedure Set_TeamTask(TeamTask: WordBool); safecall;
    function Get_TotalWork: Integer; safecall;
    procedure Set_TotalWork(TotalWork: Integer); safecall;
    function Assign_: TaskItem; safecall;
    procedure CancelResponseState; safecall;
    procedure ClearRecurrencePattern; safecall;
    function GetRecurrencePattern: RecurrencePattern; safecall;
    procedure MarkComplete; safecall;
    function Respond(Response: OlTaskResponse; fNoUI: OleVariant; fAdditionalTextDialog: OleVariant): TaskItem; safecall;
    procedure Send; safecall;
    function SkipRecurrence: WordBool; safecall;
    function StatusReport: IDispatch; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_InternetCodepage: Integer; safecall;
    procedure Set_InternetCodepage(InternetCodepage: Integer); safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property ActualWork: Integer read Get_ActualWork write Set_ActualWork;
    property CardData: WideString read Get_CardData write Set_CardData;
    property Complete: WordBool read Get_Complete write Set_Complete;
    property Contacts: WideString read Get_Contacts write Set_Contacts;
    property ContactNames: WideString read Get_ContactNames write Set_ContactNames;
    property DateCompleted: TDateTime read Get_DateCompleted write Set_DateCompleted;
    property DelegationState: OlTaskDelegationState read Get_DelegationState;
    property Delegator: WideString read Get_Delegator;
    property DueDate: TDateTime read Get_DueDate write Set_DueDate;
    property IsRecurring: WordBool read Get_IsRecurring;
    property Ordinal: Integer read Get_Ordinal write Set_Ordinal;
    property Owner: WideString read Get_Owner write Set_Owner;
    property Ownership: OlTaskOwnership read Get_Ownership;
    property PercentComplete: Integer read Get_PercentComplete write Set_PercentComplete;
    property Recipients: Recipients read Get_Recipients;
    property ReminderTime: TDateTime read Get_ReminderTime write Set_ReminderTime;
    property ReminderOverrideDefault: WordBool read Get_ReminderOverrideDefault write Set_ReminderOverrideDefault;
    property ReminderPlaySound: WordBool read Get_ReminderPlaySound write Set_ReminderPlaySound;
    property ReminderSet: WordBool read Get_ReminderSet write Set_ReminderSet;
    property ReminderSoundFile: WideString read Get_ReminderSoundFile write Set_ReminderSoundFile;
    property ResponseState: OlTaskResponse read Get_ResponseState;
    property Role: WideString read Get_Role write Set_Role;
    property SchedulePlusPriority: WideString read Get_SchedulePlusPriority write Set_SchedulePlusPriority;
    property StartDate: TDateTime read Get_StartDate write Set_StartDate;
    property Status: OlTaskStatus read Get_Status write Set_Status;
    property StatusOnCompletionRecipients: WideString read Get_StatusOnCompletionRecipients write Set_StatusOnCompletionRecipients;
    property StatusUpdateRecipients: WideString read Get_StatusUpdateRecipients write Set_StatusUpdateRecipients;
    property TeamTask: WordBool read Get_TeamTask write Set_TeamTask;
    property TotalWork: Integer read Get_TotalWork write Set_TotalWork;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property InternetCodepage: Integer read Get_InternetCodepage write Set_InternetCodepage;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _TaskRequestAcceptItem = interface(IDispatch)
    ['{00063038-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function GetAssociatedTask(AddToTaskList: WordBool): TaskItem; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _TaskRequestDeclineItem = interface(IDispatch)
    ['{00063039-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function GetAssociatedTask(AddToTaskList: WordBool): TaskItem; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _TaskRequestItem = interface(IDispatch)
    ['{00063036-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function GetAssociatedTask(AddToTaskList: WordBool): TaskItem; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _TaskRequestUpdateItem = interface(IDispatch)
    ['{00063037-0000-0000-C000-000000000046}']
    function Get_Application: _Application; safecall;
    function Get_Class_: OlObjectClass; safecall;
    function Get_Session: _NameSpace; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Actions: Actions; safecall;
    function Get_Attachments: Attachments; safecall;
    function Get_BillingInformation: WideString; safecall;
    procedure Set_BillingInformation(const BillingInformation: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Body: WideString); safecall;
    function Get_Categories: WideString; safecall;
    procedure Set_Categories(const Categories: WideString); safecall;
    function Get_Companies: WideString; safecall;
    procedure Set_Companies(const Companies: WideString); safecall;
    function Get_ConversationIndex: WideString; safecall;
    function Get_ConversationTopic: WideString; safecall;
    function Get_CreationTime: TDateTime; safecall;
    function Get_EntryID: WideString; safecall;
    function Get_FormDescription: FormDescription; safecall;
    function Get_GetInspector: _Inspector; safecall;
    function Get_Importance: OlImportance; safecall;
    procedure Set_Importance(Importance: OlImportance); safecall;
    function Get_LastModificationTime: TDateTime; safecall;
    function Get_MAPIOBJECT: IUnknown; safecall;
    function Get_MessageClass: WideString; safecall;
    procedure Set_MessageClass(const MessageClass: WideString); safecall;
    function Get_Mileage: WideString; safecall;
    procedure Set_Mileage(const Mileage: WideString); safecall;
    function Get_NoAging: WordBool; safecall;
    procedure Set_NoAging(NoAging: WordBool); safecall;
    function Get_OutlookInternalVersion: Integer; safecall;
    function Get_OutlookVersion: WideString; safecall;
    function Get_Saved: WordBool; safecall;
    function Get_Sensitivity: OlSensitivity; safecall;
    procedure Set_Sensitivity(Sensitivity: OlSensitivity); safecall;
    function Get_Size: Integer; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const Subject: WideString); safecall;
    function Get_UnRead: WordBool; safecall;
    procedure Set_UnRead(UnRead: WordBool); safecall;
    function Get_UserProperties: UserProperties; safecall;
    procedure Close(SaveMode: OlInspectorClose); safecall;
    function Copy: IDispatch; safecall;
    procedure Delete; safecall;
    procedure Display(Modal: OleVariant); safecall;
    function Move(const DestFldr: MAPIFolder): IDispatch; safecall;
    procedure PrintOut; safecall;
    procedure Save; safecall;
    procedure SaveAs(const Path: WideString; Type_: OleVariant); safecall;
    function GetAssociatedTask(AddToTaskList: WordBool): TaskItem; safecall;
    function Get_Links: Links; safecall;
    function Get_DownloadState: OlDownloadState; safecall;
    procedure ShowCategoriesDialog; safecall;
    function Get_ItemProperties: ItemProperties; safecall;
    function Get_MarkForDownload: OlRemoteStatus; safecall;
    procedure Set_MarkForDownload(MarkForDownload: OlRemoteStatus); safecall;
    function Get_IsConflict: WordBool; safecall;
    function Get_AutoResolvedWinner: WordBool; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Application: _Application read Get_Application;
    property Class_: OlObjectClass read Get_Class_;
    property Session: _NameSpace read Get_Session;
    property Parent: IDispatch read Get_Parent;
    property Actions: Actions read Get_Actions;
    property Attachments: Attachments read Get_Attachments;
    property BillingInformation: WideString read Get_BillingInformation write Set_BillingInformation;
    property Body: WideString read Get_Body write Set_Body;
    property Categories: WideString read Get_Categories write Set_Categories;
    property Companies: WideString read Get_Companies write Set_Companies;
    property ConversationIndex: WideString read Get_ConversationIndex;
    property ConversationTopic: WideString read Get_ConversationTopic;
    property CreationTime: TDateTime read Get_CreationTime;
    property EntryID: WideString read Get_EntryID;
    property FormDescription: FormDescription read Get_FormDescription;
    property GetInspector: _Inspector read Get_GetInspector;
    property Importance: OlImportance read Get_Importance write Set_Importance;
    property LastModificationTime: TDateTime read Get_LastModificationTime;
    property MAPIOBJECT: IUnknown read Get_MAPIOBJECT;
    property MessageClass: WideString read Get_MessageClass write Set_MessageClass;
    property Mileage: WideString read Get_Mileage write Set_Mileage;
    property NoAging: WordBool read Get_NoAging write Set_NoAging;
    property OutlookInternalVersion: Integer read Get_OutlookInternalVersion;
    property OutlookVersion: WideString read Get_OutlookVersion;
    property Saved: WordBool read Get_Saved;
    property Sensitivity: OlSensitivity read Get_Sensitivity write Set_Sensitivity;
    property Size: Integer read Get_Size;
    property Subject: WideString read Get_Subject write Set_Subject;
    property UnRead: WordBool read Get_UnRead write Set_UnRead;
    property UserProperties: UserProperties read Get_UserProperties;
    property Links: Links read Get_Links;
    property DownloadState: OlDownloadState read Get_DownloadState;
    property ItemProperties: ItemProperties read Get_ItemProperties;
    property MarkForDownload: OlRemoteStatus read Get_MarkForDownload write Set_MarkForDownload;
    property IsConflict: WordBool read Get_IsConflict;
    property AutoResolvedWinner: WordBool read Get_AutoResolvedWinner;
    property Conflicts: Conflicts read Get_Conflicts;
  end;
  _IRecipientControl = interface(IDispatch)
    ['{D87E7E16-6897-11CE-A6C0-00AA00608FAA}']
    function Get_Enabled(out Enabled: Shortint): HResult; stdcall;
    function Set_Enabled(Enabled: Shortint): HResult; stdcall;
    function Get_BackColor(out BackColor: Integer): HResult; stdcall;
    function Set_BackColor(BackColor: Integer): HResult; stdcall;
    function Get_ForeColor(out ForeColor: Integer): HResult; stdcall;
    function Set_ForeColor(ForeColor: Integer): HResult; stdcall;
    function Get_ReadOnly(out ReadOnly: Shortint): HResult; stdcall;
    function Set_ReadOnly(ReadOnly: Shortint): HResult; stdcall;
    function Get_Font(out Font: IDispatch): HResult; stdcall;
    function Set_Font(const Font: IDispatch): HResult; stdcall;
    function Get_SpecialEffect(out Effect: Integer): HResult; stdcall;
    function Set_SpecialEffect(Effect: Integer): HResult; stdcall;
  end;
  _IDocSiteControl = interface(IDispatch)
    ['{43507DD0-811D-11CE-B565-00AA00608FAA}']
    function Get_ReadOnly(out ReadOnly: Shortint): HResult; stdcall;
    function Set_ReadOnly(ReadOnly: Shortint): HResult; stdcall;
  end;

implementation

uses
  SysUtils;

const
  CLASS_ItemEvents: TGUID = '{00063077-0000-0000-C000-000000000046}';

procedure BuildPositionalDispIds(pDispIds: PDispIdList; const dps: TDispParams);
var
  i: integer;
begin
  Assert(pDispIds <> nil);

  for i := 0 to dps.cArgs - 1 do
    pDispIds^ [i] := dps.cArgs - 1 - i;

  if (dps.cNamedArgs <= 0) then Exit;

  for i := 0 to dps.cNamedArgs - 1 do
    pDispIds^ [dps.rgdispidNamedArgs^ [i]] := i;
end;

{ TSPOulookItemsEvents }

function TSPOulookItemsEvents.GetIDsOfNames(const IID: TGUID; Names: Pointer;
  NameCount, LocaleID: Integer; DispIDs: Pointer): HResult;
begin
  Result := E_NOTIMPL;
end;

function TSPOulookItemsEvents.GetTypeInfo(Index, LocaleID: Integer; out TypeInfo): HResult;
begin
  Result := E_NOTIMPL;
  pointer (TypeInfo) := nil;
end;

function TSPOulookItemsEvents.GetTypeInfoCount(out Count: Integer): HResult;
begin
  Result := E_NOTIMPL;
  Count := 0;
end;

function TSPOulookItemsEvents.Invoke(DispID: Integer; const IID: TGUID; LocaleID: Integer;
  Flags: Word; var Params; VarResult, ExcepInfo, ArgErr: Pointer): HResult;
var
  dps: TDispParams absolute Params;
  bHasParams: boolean;
  pDispIds: PDispIdList;
  iDispIdsSize: integer;
begin
  if (Flags AND DISPATCH_METHOD = 0) then
    raise Exception.Create(
      Format('%s only supports sinking of method calls!', [ClassName]));

  pDispIds := nil;
  iDispIdsSize := 0;
  bHasParams := (dps.cArgs > 0);
  if (bHasParams) then
  begin
    iDispIdsSize := dps.cArgs * SizeOf(TDispId);
    GetMem(pDispIds, iDispIdsSize);
  end;

  try
    if (bHasParams) then BuildPositionalDispIds(pDispIds, dps);
    Result := DoInvoke(DispId, IID, LocaleID, Flags, dps, pDispIds, VarResult, ExcepInfo, ArgErr);
  finally
    if (bHasParams) then
      FreeMem(pDispIds, iDispIdsSize);
  end;
end;

function TSPOulookItemsEvents.QueryInterface(const IID: TGUID; out Obj): HResult;
begin
  if (GetInterface(IID, Obj)) then
  begin
    Result := S_OK;
    Exit;
  end
  else
    if (IsEqualIID(IID, FSinkIID)) then
      if (GetInterface(IDispatch, Obj)) then
      begin
        Result := S_OK;
        Exit;
      end;
  Result := E_NOINTERFACE;
  Pointer(Obj) := nil;
end;

function TSPOulookItemsEvents._AddRef: Integer;
begin
  Result := 2;
end;

function TSPOulookItemsEvents._Release: Integer;
begin
  Result := 1;
end;

destructor TSPOulookItemsEvents.Destroy;
begin
  Disconnect;
  inherited;
end;

procedure TSPOulookItemsEvents.Connect(const ASource: IUnknown);
var
  pcpc: IConnectionPointContainer;
begin
  Assert(ASource <> nil);
  Disconnect;
  try
    OleCheck(ASource.QueryInterface (IConnectionPointContainer, pcpc));
    OleCheck(pcpc.FindConnectionPoint(FSinkIID, FCP));
    OleCheck(FCP.Advise(Self, FCookie));
    FSource := ASource;
  except
    raise Exception.Create(Format ('Unable to connect %s.'#13'%s',
      [Name, Exception(ExceptObject).Message]));
  end; 
end;

procedure TSPOulookItemsEvents.Disconnect;
begin
  if (FSource = nil) then Exit;
  try
    OleCheck(FCP.Unadvise(FCookie));
    FCP := nil;
    FSource := nil;
  except
    Pointer(FCP) := nil;
    Pointer(FSource) := nil;
  end;
end;

procedure TSPOulookItemsEvents.DoItemAdd(const Item: IDispatch);
begin
  if Assigned(FOnItemAdd) then
    FOnItemAdd(Self, Item);
end;

procedure TSPOulookItemsEvents.DoItemChange(const Item: IDispatch);
begin
  if Assigned(FOnItemChange) then
    FOnItemChange(Self, Item);
end;

procedure TSPOulookItemsEvents.DoItemRemove;
begin
  if Assigned(FOnItemRemove) then
    FOnItemRemove(Self);
end;

constructor TSPOulookItemsEvents.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FSinkIID := CLASS_ItemEvents;
end;

function TSPOulookItemsEvents.DoInvoke(DispID: Integer; const IID: TGUID;
  LocaleID: Integer; Flags: Word; var dps: TDispParams;
  pDispIds: PDispIdList; VarResult, ExcepInfo, ArgErr: Pointer): HResult;
type
  POleVariant = ^OleVariant;
begin
  Result := DISP_E_MEMBERNOTFOUND;

  case DispId of
    61441:
    begin
      DoItemAdd(IDispatch(dps.rgvarg^[pDispIds^[0]].dispval));
      Result := S_OK;
    end;
    61442:
    begin
      DoItemChange(IDispatch(dps.rgvarg^[pDispIds^[0]].dispval));
      Result := S_OK;
    end;
    61443:
    begin
      DoItemRemove;
      Result := S_OK;
    end;
  end;
end;

end.
